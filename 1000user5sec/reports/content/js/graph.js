/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 39031.0, "series": [{"data": [[0.0, 31983.0], [0.1, 32770.0], [0.2, 32806.0], [0.3, 32806.0], [0.4, 32901.0], [0.5, 32908.0], [0.6, 32910.0], [0.7, 32911.0], [0.8, 32945.0], [0.9, 32964.0], [1.0, 32982.0], [1.1, 32991.0], [1.2, 32998.0], [1.3, 33038.0], [1.4, 33038.0], [1.5, 33060.0], [1.6, 33062.0], [1.7, 33068.0], [1.8, 33109.0], [1.9, 33114.0], [2.0, 33134.0], [2.1, 33143.0], [2.2, 33153.0], [2.3, 33158.0], [2.4, 33160.0], [2.5, 33165.0], [2.6, 33178.0], [2.7, 33182.0], [2.8, 33186.0], [2.9, 33191.0], [3.0, 33200.0], [3.1, 33208.0], [3.2, 33213.0], [3.3, 33220.0], [3.4, 33229.0], [3.5, 33240.0], [3.6, 33249.0], [3.7, 33263.0], [3.8, 33264.0], [3.9, 33266.0], [4.0, 33279.0], [4.1, 33283.0], [4.2, 33291.0], [4.3, 33301.0], [4.4, 33302.0], [4.5, 33302.0], [4.6, 33303.0], [4.7, 33307.0], [4.8, 33336.0], [4.9, 33337.0], [5.0, 33339.0], [5.1, 33344.0], [5.2, 33346.0], [5.3, 33361.0], [5.4, 33373.0], [5.5, 33375.0], [5.6, 33377.0], [5.7, 33385.0], [5.8, 33398.0], [5.9, 33400.0], [6.0, 33404.0], [6.1, 33404.0], [6.2, 33408.0], [6.3, 33419.0], [6.4, 33428.0], [6.5, 33431.0], [6.6, 33432.0], [6.7, 33436.0], [6.8, 33437.0], [6.9, 33442.0], [7.0, 33445.0], [7.1, 33450.0], [7.2, 33454.0], [7.3, 33456.0], [7.4, 33461.0], [7.5, 33482.0], [7.6, 33484.0], [7.7, 33489.0], [7.8, 33492.0], [7.9, 33496.0], [8.0, 33499.0], [8.1, 33502.0], [8.2, 33506.0], [8.3, 33537.0], [8.4, 33539.0], [8.5, 33540.0], [8.6, 33543.0], [8.7, 33545.0], [8.8, 33546.0], [8.9, 33570.0], [9.0, 33570.0], [9.1, 33577.0], [9.2, 33578.0], [9.3, 33590.0], [9.4, 33596.0], [9.5, 33606.0], [9.6, 33608.0], [9.7, 33626.0], [9.8, 33627.0], [9.9, 33628.0], [10.0, 33647.0], [10.1, 33664.0], [10.2, 33670.0], [10.3, 33682.0], [10.4, 33717.0], [10.5, 33746.0], [10.6, 33763.0], [10.7, 33776.0], [10.8, 33781.0], [10.9, 33787.0], [11.0, 33789.0], [11.1, 33829.0], [11.2, 33858.0], [11.3, 34117.0], [11.4, 34137.0], [11.5, 34162.0], [11.6, 34172.0], [11.7, 34212.0], [11.8, 34222.0], [11.9, 34244.0], [12.0, 34246.0], [12.1, 34252.0], [12.2, 34253.0], [12.3, 34256.0], [12.4, 34287.0], [12.5, 34289.0], [12.6, 34305.0], [12.7, 34312.0], [12.8, 34313.0], [12.9, 34329.0], [13.0, 34341.0], [13.1, 34373.0], [13.2, 34380.0], [13.3, 34386.0], [13.4, 34392.0], [13.5, 34407.0], [13.6, 34416.0], [13.7, 34431.0], [13.8, 34444.0], [13.9, 34464.0], [14.0, 34479.0], [14.1, 34480.0], [14.2, 34481.0], [14.3, 34483.0], [14.4, 34484.0], [14.5, 34486.0], [14.6, 34492.0], [14.7, 34495.0], [14.8, 34496.0], [14.9, 34523.0], [15.0, 34527.0], [15.1, 34542.0], [15.2, 34544.0], [15.3, 34544.0], [15.4, 34554.0], [15.5, 34599.0], [15.6, 34609.0], [15.7, 34623.0], [15.8, 34633.0], [15.9, 34636.0], [16.0, 34640.0], [16.1, 34643.0], [16.2, 34659.0], [16.3, 34662.0], [16.4, 34683.0], [16.5, 34683.0], [16.6, 34688.0], [16.7, 34689.0], [16.8, 34696.0], [16.9, 34704.0], [17.0, 34706.0], [17.1, 34712.0], [17.2, 34718.0], [17.3, 34743.0], [17.4, 34755.0], [17.5, 34757.0], [17.6, 34759.0], [17.7, 34762.0], [17.8, 34772.0], [17.9, 34777.0], [18.0, 34778.0], [18.1, 34779.0], [18.2, 34779.0], [18.3, 34779.0], [18.4, 34787.0], [18.5, 34789.0], [18.6, 34789.0], [18.7, 34822.0], [18.8, 34823.0], [18.9, 34824.0], [19.0, 34828.0], [19.1, 34841.0], [19.2, 34848.0], [19.3, 34854.0], [19.4, 34855.0], [19.5, 34861.0], [19.6, 34876.0], [19.7, 34876.0], [19.8, 34884.0], [19.9, 34887.0], [20.0, 34888.0], [20.1, 34891.0], [20.2, 34893.0], [20.3, 34903.0], [20.4, 34911.0], [20.5, 34915.0], [20.6, 34930.0], [20.7, 34932.0], [20.8, 34937.0], [20.9, 34943.0], [21.0, 34963.0], [21.1, 34966.0], [21.2, 34978.0], [21.3, 34983.0], [21.4, 34988.0], [21.5, 35004.0], [21.6, 35028.0], [21.7, 35045.0], [21.8, 35047.0], [21.9, 35048.0], [22.0, 35056.0], [22.1, 35084.0], [22.2, 35096.0], [22.3, 35100.0], [22.4, 35111.0], [22.5, 35116.0], [22.6, 35121.0], [22.7, 35125.0], [22.8, 35131.0], [22.9, 35138.0], [23.0, 35141.0], [23.1, 35151.0], [23.2, 35155.0], [23.3, 35168.0], [23.4, 35174.0], [23.5, 35182.0], [23.6, 35187.0], [23.7, 35187.0], [23.8, 35195.0], [23.9, 35198.0], [24.0, 35215.0], [24.1, 35219.0], [24.2, 35232.0], [24.3, 35234.0], [24.4, 35246.0], [24.5, 35246.0], [24.6, 35251.0], [24.7, 35288.0], [24.8, 35290.0], [24.9, 35291.0], [25.0, 35302.0], [25.1, 35303.0], [25.2, 35306.0], [25.3, 35307.0], [25.4, 35312.0], [25.5, 35315.0], [25.6, 35320.0], [25.7, 35330.0], [25.8, 35347.0], [25.9, 35347.0], [26.0, 35349.0], [26.1, 35354.0], [26.2, 35358.0], [26.3, 35360.0], [26.4, 35364.0], [26.5, 35372.0], [26.6, 35374.0], [26.7, 35376.0], [26.8, 35378.0], [26.9, 35378.0], [27.0, 35389.0], [27.1, 35389.0], [27.2, 35391.0], [27.3, 35394.0], [27.4, 35397.0], [27.5, 35423.0], [27.6, 35434.0], [27.7, 35435.0], [27.8, 35442.0], [27.9, 35459.0], [28.0, 35460.0], [28.1, 35467.0], [28.2, 35468.0], [28.3, 35474.0], [28.4, 35475.0], [28.5, 35475.0], [28.6, 35476.0], [28.7, 35484.0], [28.8, 35484.0], [28.9, 35484.0], [29.0, 35492.0], [29.1, 35494.0], [29.2, 35504.0], [29.3, 35506.0], [29.4, 35507.0], [29.5, 35522.0], [29.6, 35531.0], [29.7, 35533.0], [29.8, 35540.0], [29.9, 35546.0], [30.0, 35555.0], [30.1, 35557.0], [30.2, 35558.0], [30.3, 35564.0], [30.4, 35565.0], [30.5, 35567.0], [30.6, 35576.0], [30.7, 35581.0], [30.8, 35582.0], [30.9, 35582.0], [31.0, 35582.0], [31.1, 35592.0], [31.2, 35594.0], [31.3, 35595.0], [31.4, 35595.0], [31.5, 35614.0], [31.6, 35619.0], [31.7, 35624.0], [31.8, 35637.0], [31.9, 35641.0], [32.0, 35643.0], [32.1, 35645.0], [32.2, 35648.0], [32.3, 35676.0], [32.4, 35677.0], [32.5, 35681.0], [32.6, 35690.0], [32.7, 35693.0], [32.8, 35702.0], [32.9, 35702.0], [33.0, 35714.0], [33.1, 35717.0], [33.2, 35717.0], [33.3, 35720.0], [33.4, 35721.0], [33.5, 35724.0], [33.6, 35727.0], [33.7, 35731.0], [33.8, 35732.0], [33.9, 35735.0], [34.0, 35736.0], [34.1, 35738.0], [34.2, 35738.0], [34.3, 35766.0], [34.4, 35768.0], [34.5, 35768.0], [34.6, 35774.0], [34.7, 35777.0], [34.8, 35793.0], [34.9, 35794.0], [35.0, 35796.0], [35.1, 35803.0], [35.2, 35805.0], [35.3, 35808.0], [35.4, 35810.0], [35.5, 35814.0], [35.6, 35816.0], [35.7, 35818.0], [35.8, 35820.0], [35.9, 35828.0], [36.0, 35839.0], [36.1, 35850.0], [36.2, 35850.0], [36.3, 35854.0], [36.4, 35859.0], [36.5, 35873.0], [36.6, 35879.0], [36.7, 35886.0], [36.8, 35886.0], [36.9, 35890.0], [37.0, 35897.0], [37.1, 35902.0], [37.2, 35902.0], [37.3, 35904.0], [37.4, 35910.0], [37.5, 35911.0], [37.6, 35913.0], [37.7, 35916.0], [37.8, 35920.0], [37.9, 35920.0], [38.0, 35920.0], [38.1, 35924.0], [38.2, 35925.0], [38.3, 35953.0], [38.4, 35975.0], [38.5, 35993.0], [38.6, 35993.0], [38.7, 36010.0], [38.8, 36019.0], [38.9, 36022.0], [39.0, 36029.0], [39.1, 36030.0], [39.2, 36037.0], [39.3, 36050.0], [39.4, 36053.0], [39.5, 36065.0], [39.6, 36068.0], [39.7, 36073.0], [39.8, 36077.0], [39.9, 36090.0], [40.0, 36094.0], [40.1, 36095.0], [40.2, 36096.0], [40.3, 36096.0], [40.4, 36097.0], [40.5, 36097.0], [40.6, 36107.0], [40.7, 36115.0], [40.8, 36138.0], [40.9, 36138.0], [41.0, 36156.0], [41.1, 36158.0], [41.2, 36158.0], [41.3, 36166.0], [41.4, 36173.0], [41.5, 36174.0], [41.6, 36175.0], [41.7, 36176.0], [41.8, 36180.0], [41.9, 36181.0], [42.0, 36184.0], [42.1, 36188.0], [42.2, 36188.0], [42.3, 36197.0], [42.4, 36200.0], [42.5, 36200.0], [42.6, 36217.0], [42.7, 36217.0], [42.8, 36218.0], [42.9, 36220.0], [43.0, 36228.0], [43.1, 36236.0], [43.2, 36237.0], [43.3, 36244.0], [43.4, 36256.0], [43.5, 36267.0], [43.6, 36273.0], [43.7, 36274.0], [43.8, 36284.0], [43.9, 36291.0], [44.0, 36291.0], [44.1, 36295.0], [44.2, 36302.0], [44.3, 36307.0], [44.4, 36309.0], [44.5, 36310.0], [44.6, 36311.0], [44.7, 36312.0], [44.8, 36313.0], [44.9, 36326.0], [45.0, 36327.0], [45.1, 36327.0], [45.2, 36333.0], [45.3, 36337.0], [45.4, 36338.0], [45.5, 36346.0], [45.6, 36348.0], [45.7, 36349.0], [45.8, 36349.0], [45.9, 36354.0], [46.0, 36359.0], [46.1, 36360.0], [46.2, 36361.0], [46.3, 36366.0], [46.4, 36372.0], [46.5, 36373.0], [46.6, 36375.0], [46.7, 36377.0], [46.8, 36377.0], [46.9, 36379.0], [47.0, 36384.0], [47.1, 36395.0], [47.2, 36399.0], [47.3, 36403.0], [47.4, 36403.0], [47.5, 36408.0], [47.6, 36409.0], [47.7, 36416.0], [47.8, 36418.0], [47.9, 36426.0], [48.0, 36431.0], [48.1, 36442.0], [48.2, 36442.0], [48.3, 36449.0], [48.4, 36464.0], [48.5, 36466.0], [48.6, 36468.0], [48.7, 36470.0], [48.8, 36475.0], [48.9, 36478.0], [49.0, 36483.0], [49.1, 36484.0], [49.2, 36484.0], [49.3, 36485.0], [49.4, 36500.0], [49.5, 36501.0], [49.6, 36505.0], [49.7, 36508.0], [49.8, 36515.0], [49.9, 36519.0], [50.0, 36520.0], [50.1, 36525.0], [50.2, 36529.0], [50.3, 36535.0], [50.4, 36535.0], [50.5, 36536.0], [50.6, 36545.0], [50.7, 36557.0], [50.8, 36562.0], [50.9, 36570.0], [51.0, 36571.0], [51.1, 36572.0], [51.2, 36572.0], [51.3, 36573.0], [51.4, 36576.0], [51.5, 36579.0], [51.6, 36584.0], [51.7, 36584.0], [51.8, 36584.0], [51.9, 36588.0], [52.0, 36591.0], [52.1, 36602.0], [52.2, 36617.0], [52.3, 36635.0], [52.4, 36637.0], [52.5, 36643.0], [52.6, 36645.0], [52.7, 36649.0], [52.8, 36649.0], [52.9, 36654.0], [53.0, 36654.0], [53.1, 36657.0], [53.2, 36668.0], [53.3, 36670.0], [53.4, 36674.0], [53.5, 36680.0], [53.6, 36680.0], [53.7, 36697.0], [53.8, 36699.0], [53.9, 36703.0], [54.0, 36704.0], [54.1, 36717.0], [54.2, 36717.0], [54.3, 36719.0], [54.4, 36719.0], [54.5, 36720.0], [54.6, 36737.0], [54.7, 36745.0], [54.8, 36746.0], [54.9, 36747.0], [55.0, 36751.0], [55.1, 36756.0], [55.2, 36757.0], [55.3, 36760.0], [55.4, 36765.0], [55.5, 36770.0], [55.6, 36774.0], [55.7, 36787.0], [55.8, 36791.0], [55.9, 36793.0], [56.0, 36800.0], [56.1, 36811.0], [56.2, 36812.0], [56.3, 36820.0], [56.4, 36829.0], [56.5, 36833.0], [56.6, 36838.0], [56.7, 36838.0], [56.8, 36846.0], [56.9, 36848.0], [57.0, 36854.0], [57.1, 36854.0], [57.2, 36863.0], [57.3, 36865.0], [57.4, 36872.0], [57.5, 36875.0], [57.6, 36899.0], [57.7, 36901.0], [57.8, 36922.0], [57.9, 36925.0], [58.0, 36927.0], [58.1, 36929.0], [58.2, 36930.0], [58.3, 36930.0], [58.4, 36943.0], [58.5, 36951.0], [58.6, 36959.0], [58.7, 36961.0], [58.8, 36972.0], [58.9, 36974.0], [59.0, 36978.0], [59.1, 36986.0], [59.2, 36997.0], [59.3, 37016.0], [59.4, 37025.0], [59.5, 37028.0], [59.6, 37047.0], [59.7, 37064.0], [59.8, 37070.0], [59.9, 37072.0], [60.0, 37075.0], [60.1, 37079.0], [60.2, 37084.0], [60.3, 37095.0], [60.4, 37098.0], [60.5, 37107.0], [60.6, 37115.0], [60.7, 37124.0], [60.8, 37127.0], [60.9, 37127.0], [61.0, 37135.0], [61.1, 37140.0], [61.2, 37146.0], [61.3, 37150.0], [61.4, 37158.0], [61.5, 37162.0], [61.6, 37166.0], [61.7, 37170.0], [61.8, 37176.0], [61.9, 37177.0], [62.0, 37180.0], [62.1, 37181.0], [62.2, 37187.0], [62.3, 37194.0], [62.4, 37199.0], [62.5, 37199.0], [62.6, 37203.0], [62.7, 37212.0], [62.8, 37213.0], [62.9, 37217.0], [63.0, 37219.0], [63.1, 37220.0], [63.2, 37222.0], [63.3, 37223.0], [63.4, 37230.0], [63.5, 37231.0], [63.6, 37232.0], [63.7, 37239.0], [63.8, 37240.0], [63.9, 37241.0], [64.0, 37252.0], [64.1, 37263.0], [64.2, 37263.0], [64.3, 37271.0], [64.4, 37271.0], [64.5, 37283.0], [64.6, 37292.0], [64.7, 37294.0], [64.8, 37330.0], [64.9, 37334.0], [65.0, 37337.0], [65.1, 37338.0], [65.2, 37347.0], [65.3, 37347.0], [65.4, 37347.0], [65.5, 37364.0], [65.6, 37371.0], [65.7, 37382.0], [65.8, 37384.0], [65.9, 37387.0], [66.0, 37396.0], [66.1, 37397.0], [66.2, 37404.0], [66.3, 37407.0], [66.4, 37408.0], [66.5, 37410.0], [66.6, 37427.0], [66.7, 37430.0], [66.8, 37454.0], [66.9, 37458.0], [67.0, 37459.0], [67.1, 37460.0], [67.2, 37461.0], [67.3, 37468.0], [67.4, 37472.0], [67.5, 37477.0], [67.6, 37482.0], [67.7, 37483.0], [67.8, 37486.0], [67.9, 37487.0], [68.0, 37499.0], [68.1, 37507.0], [68.2, 37514.0], [68.3, 37515.0], [68.4, 37515.0], [68.5, 37527.0], [68.6, 37528.0], [68.7, 37532.0], [68.8, 37535.0], [68.9, 37536.0], [69.0, 37537.0], [69.1, 37541.0], [69.2, 37543.0], [69.3, 37555.0], [69.4, 37562.0], [69.5, 37562.0], [69.6, 37565.0], [69.7, 37566.0], [69.8, 37568.0], [69.9, 37572.0], [70.0, 37574.0], [70.1, 37581.0], [70.2, 37585.0], [70.3, 37593.0], [70.4, 37594.0], [70.5, 37597.0], [70.6, 37599.0], [70.7, 37603.0], [70.8, 37604.0], [70.9, 37609.0], [71.0, 37610.0], [71.1, 37611.0], [71.2, 37625.0], [71.3, 37628.0], [71.4, 37633.0], [71.5, 37638.0], [71.6, 37645.0], [71.7, 37646.0], [71.8, 37648.0], [71.9, 37652.0], [72.0, 37660.0], [72.1, 37669.0], [72.2, 37684.0], [72.3, 37685.0], [72.4, 37701.0], [72.5, 37709.0], [72.6, 37725.0], [72.7, 37733.0], [72.8, 37739.0], [72.9, 37741.0], [73.0, 37750.0], [73.1, 37752.0], [73.2, 37752.0], [73.3, 37763.0], [73.4, 37773.0], [73.5, 37774.0], [73.6, 37776.0], [73.7, 37777.0], [73.8, 37779.0], [73.9, 37781.0], [74.0, 37781.0], [74.1, 37782.0], [74.2, 37789.0], [74.3, 37799.0], [74.4, 37803.0], [74.5, 37832.0], [74.6, 37837.0], [74.7, 37837.0], [74.8, 37839.0], [74.9, 37859.0], [75.0, 37866.0], [75.1, 37869.0], [75.2, 37879.0], [75.3, 37884.0], [75.4, 37884.0], [75.5, 37888.0], [75.6, 37892.0], [75.7, 37892.0], [75.8, 37897.0], [75.9, 37904.0], [76.0, 37905.0], [76.1, 37909.0], [76.2, 37915.0], [76.3, 37916.0], [76.4, 37920.0], [76.5, 37923.0], [76.6, 37924.0], [76.7, 37933.0], [76.8, 37948.0], [76.9, 37958.0], [77.0, 37958.0], [77.1, 37960.0], [77.2, 37964.0], [77.3, 37974.0], [77.4, 37978.0], [77.5, 37982.0], [77.6, 37982.0], [77.7, 37985.0], [77.8, 37986.0], [77.9, 37990.0], [78.0, 37990.0], [78.1, 38000.0], [78.2, 38012.0], [78.3, 38017.0], [78.4, 38022.0], [78.5, 38022.0], [78.6, 38023.0], [78.7, 38024.0], [78.8, 38024.0], [78.9, 38036.0], [79.0, 38038.0], [79.1, 38051.0], [79.2, 38055.0], [79.3, 38056.0], [79.4, 38065.0], [79.5, 38077.0], [79.6, 38081.0], [79.7, 38081.0], [79.8, 38083.0], [79.9, 38098.0], [80.0, 38107.0], [80.1, 38112.0], [80.2, 38115.0], [80.3, 38128.0], [80.4, 38141.0], [80.5, 38141.0], [80.6, 38150.0], [80.7, 38151.0], [80.8, 38151.0], [80.9, 38151.0], [81.0, 38152.0], [81.1, 38156.0], [81.2, 38158.0], [81.3, 38160.0], [81.4, 38172.0], [81.5, 38176.0], [81.6, 38179.0], [81.7, 38179.0], [81.8, 38184.0], [81.9, 38184.0], [82.0, 38197.0], [82.1, 38203.0], [82.2, 38210.0], [82.3, 38213.0], [82.4, 38222.0], [82.5, 38224.0], [82.6, 38224.0], [82.7, 38235.0], [82.8, 38238.0], [82.9, 38243.0], [83.0, 38245.0], [83.1, 38248.0], [83.2, 38261.0], [83.3, 38262.0], [83.4, 38267.0], [83.5, 38273.0], [83.6, 38284.0], [83.7, 38287.0], [83.8, 38288.0], [83.9, 38290.0], [84.0, 38290.0], [84.1, 38293.0], [84.2, 38294.0], [84.3, 38298.0], [84.4, 38305.0], [84.5, 38305.0], [84.6, 38312.0], [84.7, 38314.0], [84.8, 38315.0], [84.9, 38336.0], [85.0, 38349.0], [85.1, 38349.0], [85.2, 38351.0], [85.3, 38355.0], [85.4, 38356.0], [85.5, 38361.0], [85.6, 38362.0], [85.7, 38366.0], [85.8, 38367.0], [85.9, 38369.0], [86.0, 38371.0], [86.1, 38373.0], [86.2, 38389.0], [86.3, 38390.0], [86.4, 38390.0], [86.5, 38391.0], [86.6, 38396.0], [86.7, 38398.0], [86.8, 38398.0], [86.9, 38399.0], [87.0, 38401.0], [87.1, 38408.0], [87.2, 38408.0], [87.3, 38415.0], [87.4, 38417.0], [87.5, 38418.0], [87.6, 38419.0], [87.7, 38421.0], [87.8, 38433.0], [87.9, 38436.0], [88.0, 38439.0], [88.1, 38451.0], [88.2, 38461.0], [88.3, 38462.0], [88.4, 38463.0], [88.5, 38465.0], [88.6, 38466.0], [88.7, 38470.0], [88.8, 38470.0], [88.9, 38476.0], [89.0, 38483.0], [89.1, 38485.0], [89.2, 38486.0], [89.3, 38488.0], [89.4, 38493.0], [89.5, 38495.0], [89.6, 38500.0], [89.7, 38506.0], [89.8, 38512.0], [89.9, 38519.0], [90.0, 38531.0], [90.1, 38539.0], [90.2, 38546.0], [90.3, 38552.0], [90.4, 38557.0], [90.5, 38567.0], [90.6, 38572.0], [90.7, 38575.0], [90.8, 38579.0], [90.9, 38582.0], [91.0, 38585.0], [91.1, 38587.0], [91.2, 38587.0], [91.3, 38595.0], [91.4, 38598.0], [91.5, 38599.0], [91.6, 38619.0], [91.7, 38627.0], [91.8, 38629.0], [91.9, 38631.0], [92.0, 38632.0], [92.1, 38637.0], [92.2, 38640.0], [92.3, 38643.0], [92.4, 38644.0], [92.5, 38645.0], [92.6, 38657.0], [92.7, 38662.0], [92.8, 38663.0], [92.9, 38672.0], [93.0, 38676.0], [93.1, 38686.0], [93.2, 38687.0], [93.3, 38692.0], [93.4, 38700.0], [93.5, 38704.0], [93.6, 38709.0], [93.7, 38714.0], [93.8, 38714.0], [93.9, 38720.0], [94.0, 38721.0], [94.1, 38723.0], [94.2, 38723.0], [94.3, 38724.0], [94.4, 38740.0], [94.5, 38762.0], [94.6, 38762.0], [94.7, 38763.0], [94.8, 38765.0], [94.9, 38770.0], [95.0, 38780.0], [95.1, 38780.0], [95.2, 38781.0], [95.3, 38781.0], [95.4, 38781.0], [95.5, 38782.0], [95.6, 38784.0], [95.7, 38789.0], [95.8, 38790.0], [95.9, 38795.0], [96.0, 38798.0], [96.1, 38800.0], [96.2, 38806.0], [96.3, 38807.0], [96.4, 38810.0], [96.5, 38815.0], [96.6, 38822.0], [96.7, 38823.0], [96.8, 38826.0], [96.9, 38839.0], [97.0, 38839.0], [97.1, 38839.0], [97.2, 38840.0], [97.3, 38854.0], [97.4, 38856.0], [97.5, 38857.0], [97.6, 38859.0], [97.7, 38863.0], [97.8, 38868.0], [97.9, 38869.0], [98.0, 38869.0], [98.1, 38874.0], [98.2, 38879.0], [98.3, 38887.0], [98.4, 38890.0], [98.5, 38893.0], [98.6, 38912.0], [98.7, 38921.0], [98.8, 38923.0], [98.9, 38925.0], [99.0, 38927.0], [99.1, 38930.0], [99.2, 38932.0], [99.3, 38936.0], [99.4, 38938.0], [99.5, 38966.0], [99.6, 38984.0], [99.7, 39006.0], [99.8, 39011.0], [99.9, 39031.0]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 4.0], [4.0, 4.0], [4.1, 4.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 5.0], [5.9, 5.0], [6.0, 5.0], [6.1, 5.0], [6.2, 5.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 5.0], [6.8, 5.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 5.0], [7.3, 6.0], [7.4, 6.0], [7.5, 6.0], [7.6, 6.0], [7.7, 6.0], [7.8, 6.0], [7.9, 6.0], [8.0, 6.0], [8.1, 6.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 7.0], [11.1, 7.0], [11.2, 7.0], [11.3, 7.0], [11.4, 7.0], [11.5, 7.0], [11.6, 7.0], [11.7, 7.0], [11.8, 7.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 9.0], [15.2, 9.0], [15.3, 9.0], [15.4, 9.0], [15.5, 9.0], [15.6, 9.0], [15.7, 9.0], [15.8, 9.0], [15.9, 9.0], [16.0, 9.0], [16.1, 9.0], [16.2, 9.0], [16.3, 9.0], [16.4, 9.0], [16.5, 9.0], [16.6, 9.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 10.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 10.0], [18.3, 10.0], [18.4, 11.0], [18.5, 11.0], [18.6, 11.0], [18.7, 11.0], [18.8, 11.0], [18.9, 11.0], [19.0, 11.0], [19.1, 11.0], [19.2, 11.0], [19.3, 11.0], [19.4, 11.0], [19.5, 11.0], [19.6, 11.0], [19.7, 11.0], [19.8, 12.0], [19.9, 12.0], [20.0, 12.0], [20.1, 12.0], [20.2, 12.0], [20.3, 12.0], [20.4, 12.0], [20.5, 12.0], [20.6, 12.0], [20.7, 12.0], [20.8, 12.0], [20.9, 12.0], [21.0, 12.0], [21.1, 12.0], [21.2, 12.0], [21.3, 13.0], [21.4, 13.0], [21.5, 13.0], [21.6, 13.0], [21.7, 13.0], [21.8, 13.0], [21.9, 13.0], [22.0, 13.0], [22.1, 14.0], [22.2, 14.0], [22.3, 14.0], [22.4, 14.0], [22.5, 14.0], [22.6, 14.0], [22.7, 14.0], [22.8, 14.0], [22.9, 14.0], [23.0, 14.0], [23.1, 14.0], [23.2, 14.0], [23.3, 14.0], [23.4, 14.0], [23.5, 14.0], [23.6, 14.0], [23.7, 14.0], [23.8, 14.0], [23.9, 15.0], [24.0, 15.0], [24.1, 15.0], [24.2, 15.0], [24.3, 15.0], [24.4, 15.0], [24.5, 15.0], [24.6, 15.0], [24.7, 15.0], [24.8, 15.0], [24.9, 16.0], [25.0, 16.0], [25.1, 16.0], [25.2, 16.0], [25.3, 16.0], [25.4, 16.0], [25.5, 16.0], [25.6, 16.0], [25.7, 16.0], [25.8, 16.0], [25.9, 17.0], [26.0, 17.0], [26.1, 17.0], [26.2, 17.0], [26.3, 17.0], [26.4, 17.0], [26.5, 17.0], [26.6, 18.0], [26.7, 18.0], [26.8, 18.0], [26.9, 18.0], [27.0, 18.0], [27.1, 18.0], [27.2, 18.0], [27.3, 18.0], [27.4, 18.0], [27.5, 19.0], [27.6, 19.0], [27.7, 19.0], [27.8, 19.0], [27.9, 19.0], [28.0, 19.0], [28.1, 20.0], [28.2, 20.0], [28.3, 20.0], [28.4, 20.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 20.0], [28.9, 20.0], [29.0, 20.0], [29.1, 21.0], [29.2, 21.0], [29.3, 21.0], [29.4, 21.0], [29.5, 21.0], [29.6, 21.0], [29.7, 21.0], [29.8, 22.0], [29.9, 22.0], [30.0, 22.0], [30.1, 22.0], [30.2, 23.0], [30.3, 23.0], [30.4, 24.0], [30.5, 24.0], [30.6, 24.0], [30.7, 24.0], [30.8, 24.0], [30.9, 24.0], [31.0, 24.0], [31.1, 25.0], [31.2, 25.0], [31.3, 25.0], [31.4, 25.0], [31.5, 25.0], [31.6, 25.0], [31.7, 25.0], [31.8, 25.0], [31.9, 25.0], [32.0, 25.0], [32.1, 25.0], [32.2, 25.0], [32.3, 25.0], [32.4, 26.0], [32.5, 26.0], [32.6, 26.0], [32.7, 26.0], [32.8, 26.0], [32.9, 26.0], [33.0, 26.0], [33.1, 26.0], [33.2, 26.0], [33.3, 26.0], [33.4, 26.0], [33.5, 26.0], [33.6, 26.0], [33.7, 27.0], [33.8, 27.0], [33.9, 27.0], [34.0, 27.0], [34.1, 27.0], [34.2, 27.0], [34.3, 27.0], [34.4, 27.0], [34.5, 27.0], [34.6, 28.0], [34.7, 28.0], [34.8, 28.0], [34.9, 28.0], [35.0, 28.0], [35.1, 28.0], [35.2, 29.0], [35.3, 29.0], [35.4, 29.0], [35.5, 29.0], [35.6, 29.0], [35.7, 29.0], [35.8, 29.0], [35.9, 30.0], [36.0, 30.0], [36.1, 30.0], [36.2, 30.0], [36.3, 30.0], [36.4, 30.0], [36.5, 30.0], [36.6, 30.0], [36.7, 30.0], [36.8, 30.0], [36.9, 30.0], [37.0, 31.0], [37.1, 31.0], [37.2, 31.0], [37.3, 31.0], [37.4, 31.0], [37.5, 31.0], [37.6, 31.0], [37.7, 32.0], [37.8, 32.0], [37.9, 32.0], [38.0, 32.0], [38.1, 32.0], [38.2, 32.0], [38.3, 32.0], [38.4, 32.0], [38.5, 32.0], [38.6, 32.0], [38.7, 32.0], [38.8, 32.0], [38.9, 32.0], [39.0, 32.0], [39.1, 32.0], [39.2, 33.0], [39.3, 33.0], [39.4, 33.0], [39.5, 33.0], [39.6, 33.0], [39.7, 33.0], [39.8, 34.0], [39.9, 34.0], [40.0, 34.0], [40.1, 34.0], [40.2, 35.0], [40.3, 35.0], [40.4, 35.0], [40.5, 35.0], [40.6, 35.0], [40.7, 35.0], [40.8, 35.0], [40.9, 35.0], [41.0, 35.0], [41.1, 35.0], [41.2, 35.0], [41.3, 35.0], [41.4, 35.0], [41.5, 36.0], [41.6, 36.0], [41.7, 36.0], [41.8, 36.0], [41.9, 37.0], [42.0, 37.0], [42.1, 37.0], [42.2, 37.0], [42.3, 37.0], [42.4, 37.0], [42.5, 37.0], [42.6, 37.0], [42.7, 38.0], [42.8, 38.0], [42.9, 38.0], [43.0, 38.0], [43.1, 38.0], [43.2, 39.0], [43.3, 39.0], [43.4, 39.0], [43.5, 40.0], [43.6, 40.0], [43.7, 40.0], [43.8, 41.0], [43.9, 41.0], [44.0, 41.0], [44.1, 41.0], [44.2, 41.0], [44.3, 42.0], [44.4, 42.0], [44.5, 42.0], [44.6, 42.0], [44.7, 42.0], [44.8, 43.0], [44.9, 43.0], [45.0, 43.0], [45.1, 44.0], [45.2, 44.0], [45.3, 45.0], [45.4, 45.0], [45.5, 46.0], [45.6, 47.0], [45.7, 47.0], [45.8, 47.0], [45.9, 47.0], [46.0, 47.0], [46.1, 48.0], [46.2, 48.0], [46.3, 48.0], [46.4, 48.0], [46.5, 48.0], [46.6, 48.0], [46.7, 48.0], [46.8, 49.0], [46.9, 49.0], [47.0, 49.0], [47.1, 50.0], [47.2, 50.0], [47.3, 50.0], [47.4, 50.0], [47.5, 50.0], [47.6, 51.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 53.0], [48.1, 53.0], [48.2, 54.0], [48.3, 54.0], [48.4, 55.0], [48.5, 55.0], [48.6, 55.0], [48.7, 56.0], [48.8, 58.0], [48.9, 58.0], [49.0, 59.0], [49.1, 59.0], [49.2, 59.0], [49.3, 60.0], [49.4, 60.0], [49.5, 60.0], [49.6, 60.0], [49.7, 60.0], [49.8, 60.0], [49.9, 61.0], [50.0, 61.0], [50.1, 61.0], [50.2, 61.0], [50.3, 62.0], [50.4, 62.0], [50.5, 62.0], [50.6, 62.0], [50.7, 62.0], [50.8, 63.0], [50.9, 63.0], [51.0, 63.0], [51.1, 63.0], [51.2, 63.0], [51.3, 64.0], [51.4, 64.0], [51.5, 64.0], [51.6, 65.0], [51.7, 65.0], [51.8, 65.0], [51.9, 66.0], [52.0, 66.0], [52.1, 67.0], [52.2, 67.0], [52.3, 68.0], [52.4, 68.0], [52.5, 68.0], [52.6, 68.0], [52.7, 68.0], [52.8, 69.0], [52.9, 69.0], [53.0, 70.0], [53.1, 71.0], [53.2, 71.0], [53.3, 71.0], [53.4, 71.0], [53.5, 71.0], [53.6, 71.0], [53.7, 72.0], [53.8, 72.0], [53.9, 72.0], [54.0, 72.0], [54.1, 73.0], [54.2, 74.0], [54.3, 75.0], [54.4, 75.0], [54.5, 75.0], [54.6, 75.0], [54.7, 76.0], [54.8, 76.0], [54.9, 76.0], [55.0, 76.0], [55.1, 78.0], [55.2, 78.0], [55.3, 78.0], [55.4, 79.0], [55.5, 79.0], [55.6, 80.0], [55.7, 80.0], [55.8, 80.0], [55.9, 80.0], [56.0, 81.0], [56.1, 81.0], [56.2, 81.0], [56.3, 82.0], [56.4, 82.0], [56.5, 82.0], [56.6, 83.0], [56.7, 83.0], [56.8, 84.0], [56.9, 84.0], [57.0, 84.0], [57.1, 84.0], [57.2, 84.0], [57.3, 85.0], [57.4, 85.0], [57.5, 85.0], [57.6, 85.0], [57.7, 85.0], [57.8, 86.0], [57.9, 86.0], [58.0, 86.0], [58.1, 87.0], [58.2, 87.0], [58.3, 87.0], [58.4, 87.0], [58.5, 87.0], [58.6, 87.0], [58.7, 87.0], [58.8, 87.0], [58.9, 88.0], [59.0, 88.0], [59.1, 88.0], [59.2, 88.0], [59.3, 88.0], [59.4, 89.0], [59.5, 89.0], [59.6, 90.0], [59.7, 90.0], [59.8, 91.0], [59.9, 91.0], [60.0, 91.0], [60.1, 91.0], [60.2, 93.0], [60.3, 93.0], [60.4, 93.0], [60.5, 94.0], [60.6, 94.0], [60.7, 94.0], [60.8, 95.0], [60.9, 95.0], [61.0, 95.0], [61.1, 95.0], [61.2, 96.0], [61.3, 96.0], [61.4, 96.0], [61.5, 96.0], [61.6, 96.0], [61.7, 96.0], [61.8, 96.0], [61.9, 97.0], [62.0, 98.0], [62.1, 98.0], [62.2, 98.0], [62.3, 98.0], [62.4, 98.0], [62.5, 98.0], [62.6, 99.0], [62.7, 99.0], [62.8, 99.0], [62.9, 100.0], [63.0, 101.0], [63.1, 102.0], [63.2, 102.0], [63.3, 103.0], [63.4, 104.0], [63.5, 104.0], [63.6, 104.0], [63.7, 105.0], [63.8, 105.0], [63.9, 105.0], [64.0, 106.0], [64.1, 106.0], [64.2, 107.0], [64.3, 107.0], [64.4, 108.0], [64.5, 108.0], [64.6, 109.0], [64.7, 110.0], [64.8, 110.0], [64.9, 110.0], [65.0, 110.0], [65.1, 110.0], [65.2, 111.0], [65.3, 111.0], [65.4, 111.0], [65.5, 111.0], [65.6, 111.0], [65.7, 112.0], [65.8, 112.0], [65.9, 112.0], [66.0, 112.0], [66.1, 112.0], [66.2, 113.0], [66.3, 113.0], [66.4, 114.0], [66.5, 114.0], [66.6, 114.0], [66.7, 114.0], [66.8, 114.0], [66.9, 114.0], [67.0, 114.0], [67.1, 115.0], [67.2, 115.0], [67.3, 115.0], [67.4, 115.0], [67.5, 115.0], [67.6, 115.0], [67.7, 116.0], [67.8, 117.0], [67.9, 117.0], [68.0, 117.0], [68.1, 117.0], [68.2, 118.0], [68.3, 118.0], [68.4, 118.0], [68.5, 118.0], [68.6, 118.0], [68.7, 118.0], [68.8, 119.0], [68.9, 120.0], [69.0, 120.0], [69.1, 120.0], [69.2, 120.0], [69.3, 120.0], [69.4, 121.0], [69.5, 121.0], [69.6, 121.0], [69.7, 122.0], [69.8, 122.0], [69.9, 122.0], [70.0, 122.0], [70.1, 122.0], [70.2, 123.0], [70.3, 123.0], [70.4, 123.0], [70.5, 123.0], [70.6, 123.0], [70.7, 124.0], [70.8, 124.0], [70.9, 124.0], [71.0, 125.0], [71.1, 125.0], [71.2, 126.0], [71.3, 126.0], [71.4, 127.0], [71.5, 128.0], [71.6, 128.0], [71.7, 129.0], [71.8, 129.0], [71.9, 129.0], [72.0, 130.0], [72.1, 130.0], [72.2, 130.0], [72.3, 130.0], [72.4, 130.0], [72.5, 130.0], [72.6, 131.0], [72.7, 131.0], [72.8, 131.0], [72.9, 132.0], [73.0, 132.0], [73.1, 133.0], [73.2, 134.0], [73.3, 134.0], [73.4, 134.0], [73.5, 136.0], [73.6, 137.0], [73.7, 137.0], [73.8, 137.0], [73.9, 138.0], [74.0, 139.0], [74.1, 139.0], [74.2, 139.0], [74.3, 139.0], [74.4, 139.0], [74.5, 140.0], [74.6, 141.0], [74.7, 141.0], [74.8, 141.0], [74.9, 142.0], [75.0, 143.0], [75.1, 143.0], [75.2, 143.0], [75.3, 144.0], [75.4, 144.0], [75.5, 144.0], [75.6, 145.0], [75.7, 145.0], [75.8, 145.0], [75.9, 145.0], [76.0, 145.0], [76.1, 145.0], [76.2, 146.0], [76.3, 146.0], [76.4, 146.0], [76.5, 146.0], [76.6, 146.0], [76.7, 147.0], [76.8, 147.0], [76.9, 147.0], [77.0, 147.0], [77.1, 148.0], [77.2, 148.0], [77.3, 149.0], [77.4, 150.0], [77.5, 151.0], [77.6, 151.0], [77.7, 152.0], [77.8, 152.0], [77.9, 152.0], [78.0, 153.0], [78.1, 153.0], [78.2, 154.0], [78.3, 154.0], [78.4, 154.0], [78.5, 155.0], [78.6, 156.0], [78.7, 157.0], [78.8, 157.0], [78.9, 157.0], [79.0, 158.0], [79.1, 158.0], [79.2, 158.0], [79.3, 158.0], [79.4, 158.0], [79.5, 159.0], [79.6, 159.0], [79.7, 159.0], [79.8, 159.0], [79.9, 160.0], [80.0, 160.0], [80.1, 160.0], [80.2, 161.0], [80.3, 161.0], [80.4, 161.0], [80.5, 161.0], [80.6, 161.0], [80.7, 162.0], [80.8, 162.0], [80.9, 163.0], [81.0, 163.0], [81.1, 164.0], [81.2, 164.0], [81.3, 165.0], [81.4, 165.0], [81.5, 165.0], [81.6, 166.0], [81.7, 166.0], [81.8, 166.0], [81.9, 167.0], [82.0, 167.0], [82.1, 167.0], [82.2, 167.0], [82.3, 167.0], [82.4, 168.0], [82.5, 169.0], [82.6, 169.0], [82.7, 170.0], [82.8, 170.0], [82.9, 170.0], [83.0, 170.0], [83.1, 170.0], [83.2, 171.0], [83.3, 172.0], [83.4, 172.0], [83.5, 172.0], [83.6, 173.0], [83.7, 173.0], [83.8, 173.0], [83.9, 174.0], [84.0, 174.0], [84.1, 174.0], [84.2, 174.0], [84.3, 175.0], [84.4, 175.0], [84.5, 176.0], [84.6, 176.0], [84.7, 176.0], [84.8, 176.0], [84.9, 177.0], [85.0, 177.0], [85.1, 177.0], [85.2, 178.0], [85.3, 178.0], [85.4, 178.0], [85.5, 178.0], [85.6, 178.0], [85.7, 179.0], [85.8, 179.0], [85.9, 180.0], [86.0, 180.0], [86.1, 180.0], [86.2, 181.0], [86.3, 181.0], [86.4, 181.0], [86.5, 181.0], [86.6, 181.0], [86.7, 182.0], [86.8, 182.0], [86.9, 182.0], [87.0, 182.0], [87.1, 183.0], [87.2, 183.0], [87.3, 183.0], [87.4, 183.0], [87.5, 184.0], [87.6, 184.0], [87.7, 184.0], [87.8, 184.0], [87.9, 185.0], [88.0, 185.0], [88.1, 185.0], [88.2, 185.0], [88.3, 186.0], [88.4, 186.0], [88.5, 186.0], [88.6, 187.0], [88.7, 188.0], [88.8, 189.0], [88.9, 190.0], [89.0, 190.0], [89.1, 191.0], [89.2, 191.0], [89.3, 191.0], [89.4, 191.0], [89.5, 192.0], [89.6, 193.0], [89.7, 193.0], [89.8, 194.0], [89.9, 195.0], [90.0, 195.0], [90.1, 195.0], [90.2, 196.0], [90.3, 197.0], [90.4, 197.0], [90.5, 197.0], [90.6, 199.0], [90.7, 199.0], [90.8, 199.0], [90.9, 199.0], [91.0, 200.0], [91.1, 200.0], [91.2, 200.0], [91.3, 201.0], [91.4, 201.0], [91.5, 204.0], [91.6, 204.0], [91.7, 205.0], [91.8, 205.0], [91.9, 206.0], [92.0, 206.0], [92.1, 207.0], [92.2, 208.0], [92.3, 208.0], [92.4, 208.0], [92.5, 209.0], [92.6, 209.0], [92.7, 209.0], [92.8, 210.0], [92.9, 211.0], [93.0, 213.0], [93.1, 214.0], [93.2, 214.0], [93.3, 215.0], [93.4, 218.0], [93.5, 218.0], [93.6, 219.0], [93.7, 219.0], [93.8, 220.0], [93.9, 221.0], [94.0, 222.0], [94.1, 222.0], [94.2, 225.0], [94.3, 225.0], [94.4, 225.0], [94.5, 225.0], [94.6, 226.0], [94.7, 228.0], [94.8, 228.0], [94.9, 229.0], [95.0, 229.0], [95.1, 231.0], [95.2, 233.0], [95.3, 234.0], [95.4, 235.0], [95.5, 236.0], [95.6, 237.0], [95.7, 237.0], [95.8, 238.0], [95.9, 239.0], [96.0, 240.0], [96.1, 240.0], [96.2, 244.0], [96.3, 245.0], [96.4, 248.0], [96.5, 250.0], [96.6, 250.0], [96.7, 251.0], [96.8, 254.0], [96.9, 256.0], [97.0, 256.0], [97.1, 256.0], [97.2, 256.0], [97.3, 257.0], [97.4, 257.0], [97.5, 257.0], [97.6, 260.0], [97.7, 261.0], [97.8, 264.0], [97.9, 265.0], [98.0, 265.0], [98.1, 270.0], [98.2, 272.0], [98.3, 273.0], [98.4, 276.0], [98.5, 278.0], [98.6, 283.0], [98.7, 284.0], [98.8, 300.0], [98.9, 302.0], [99.0, 302.0], [99.1, 348.0], [99.2, 354.0], [99.3, 360.0], [99.4, 364.0], [99.5, 366.0], [99.6, 391.0], [99.7, 397.0], [99.8, 401.0], [99.9, 406.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 8.0], [5.8, 8.0], [5.9, 8.0], [6.0, 8.0], [6.1, 8.0], [6.2, 8.0], [6.3, 8.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 10.0], [7.3, 10.0], [7.4, 10.0], [7.5, 10.0], [7.6, 10.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 13.0], [9.1, 13.0], [9.2, 13.0], [9.3, 13.0], [9.4, 14.0], [9.5, 14.0], [9.6, 14.0], [9.7, 14.0], [9.8, 14.0], [9.9, 15.0], [10.0, 15.0], [10.1, 15.0], [10.2, 15.0], [10.3, 17.0], [10.4, 17.0], [10.5, 18.0], [10.6, 18.0], [10.7, 18.0], [10.8, 19.0], [10.9, 19.0], [11.0, 20.0], [11.1, 20.0], [11.2, 20.0], [11.3, 21.0], [11.4, 21.0], [11.5, 21.0], [11.6, 21.0], [11.7, 21.0], [11.8, 22.0], [11.9, 24.0], [12.0, 24.0], [12.1, 25.0], [12.2, 25.0], [12.3, 25.0], [12.4, 26.0], [12.5, 27.0], [12.6, 27.0], [12.7, 27.0], [12.8, 27.0], [12.9, 28.0], [13.0, 28.0], [13.1, 29.0], [13.2, 29.0], [13.3, 29.0], [13.4, 29.0], [13.5, 30.0], [13.6, 31.0], [13.7, 32.0], [13.8, 32.0], [13.9, 32.0], [14.0, 33.0], [14.1, 33.0], [14.2, 33.0], [14.3, 34.0], [14.4, 34.0], [14.5, 35.0], [14.6, 36.0], [14.7, 37.0], [14.8, 37.0], [14.9, 37.0], [15.0, 37.0], [15.1, 38.0], [15.2, 39.0], [15.3, 40.0], [15.4, 40.0], [15.5, 43.0], [15.6, 44.0], [15.7, 44.0], [15.8, 45.0], [15.9, 45.0], [16.0, 46.0], [16.1, 46.0], [16.2, 46.0], [16.3, 47.0], [16.4, 47.0], [16.5, 49.0], [16.6, 49.0], [16.7, 49.0], [16.8, 50.0], [16.9, 50.0], [17.0, 51.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 52.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 53.0], [18.0, 53.0], [18.1, 53.0], [18.2, 53.0], [18.3, 53.0], [18.4, 54.0], [18.5, 54.0], [18.6, 54.0], [18.7, 55.0], [18.8, 56.0], [18.9, 56.0], [19.0, 57.0], [19.1, 57.0], [19.2, 57.0], [19.3, 58.0], [19.4, 58.0], [19.5, 58.0], [19.6, 58.0], [19.7, 60.0], [19.8, 60.0], [19.9, 61.0], [20.0, 62.0], [20.1, 63.0], [20.2, 64.0], [20.3, 65.0], [20.4, 65.0], [20.5, 66.0], [20.6, 67.0], [20.7, 67.0], [20.8, 67.0], [20.9, 67.0], [21.0, 69.0], [21.1, 71.0], [21.2, 71.0], [21.3, 72.0], [21.4, 72.0], [21.5, 72.0], [21.6, 72.0], [21.7, 72.0], [21.8, 72.0], [21.9, 72.0], [22.0, 73.0], [22.1, 74.0], [22.2, 75.0], [22.3, 75.0], [22.4, 76.0], [22.5, 76.0], [22.6, 76.0], [22.7, 77.0], [22.8, 77.0], [22.9, 77.0], [23.0, 77.0], [23.1, 77.0], [23.2, 77.0], [23.3, 77.0], [23.4, 77.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 78.0], [23.9, 78.0], [24.0, 78.0], [24.1, 78.0], [24.2, 79.0], [24.3, 79.0], [24.4, 80.0], [24.5, 80.0], [24.6, 82.0], [24.7, 83.0], [24.8, 83.0], [24.9, 83.0], [25.0, 83.0], [25.1, 83.0], [25.2, 84.0], [25.3, 84.0], [25.4, 86.0], [25.5, 86.0], [25.6, 87.0], [25.7, 87.0], [25.8, 87.0], [25.9, 88.0], [26.0, 88.0], [26.1, 88.0], [26.2, 89.0], [26.3, 89.0], [26.4, 89.0], [26.5, 90.0], [26.6, 91.0], [26.7, 91.0], [26.8, 91.0], [26.9, 91.0], [27.0, 91.0], [27.1, 92.0], [27.2, 92.0], [27.3, 92.0], [27.4, 92.0], [27.5, 92.0], [27.6, 93.0], [27.7, 94.0], [27.8, 95.0], [27.9, 96.0], [28.0, 96.0], [28.1, 97.0], [28.2, 97.0], [28.3, 98.0], [28.4, 98.0], [28.5, 98.0], [28.6, 98.0], [28.7, 99.0], [28.8, 99.0], [28.9, 99.0], [29.0, 99.0], [29.1, 99.0], [29.2, 99.0], [29.3, 100.0], [29.4, 100.0], [29.5, 100.0], [29.6, 100.0], [29.7, 100.0], [29.8, 100.0], [29.9, 101.0], [30.0, 101.0], [30.1, 101.0], [30.2, 101.0], [30.3, 101.0], [30.4, 101.0], [30.5, 102.0], [30.6, 102.0], [30.7, 103.0], [30.8, 104.0], [30.9, 104.0], [31.0, 104.0], [31.1, 104.0], [31.2, 104.0], [31.3, 105.0], [31.4, 105.0], [31.5, 105.0], [31.6, 105.0], [31.7, 106.0], [31.8, 106.0], [31.9, 106.0], [32.0, 107.0], [32.1, 107.0], [32.2, 108.0], [32.3, 108.0], [32.4, 108.0], [32.5, 108.0], [32.6, 108.0], [32.7, 108.0], [32.8, 109.0], [32.9, 109.0], [33.0, 109.0], [33.1, 109.0], [33.2, 110.0], [33.3, 110.0], [33.4, 111.0], [33.5, 112.0], [33.6, 112.0], [33.7, 113.0], [33.8, 114.0], [33.9, 115.0], [34.0, 124.0], [34.1, 127.0], [34.2, 137.0], [34.3, 138.0], [34.4, 139.0], [34.5, 141.0], [34.6, 142.0], [34.7, 142.0], [34.8, 143.0], [34.9, 144.0], [35.0, 144.0], [35.1, 144.0], [35.2, 145.0], [35.3, 145.0], [35.4, 145.0], [35.5, 145.0], [35.6, 145.0], [35.7, 145.0], [35.8, 146.0], [35.9, 146.0], [36.0, 146.0], [36.1, 146.0], [36.2, 146.0], [36.3, 147.0], [36.4, 147.0], [36.5, 147.0], [36.6, 147.0], [36.7, 149.0], [36.8, 149.0], [36.9, 150.0], [37.0, 150.0], [37.1, 150.0], [37.2, 150.0], [37.3, 151.0], [37.4, 151.0], [37.5, 152.0], [37.6, 153.0], [37.7, 153.0], [37.8, 153.0], [37.9, 153.0], [38.0, 154.0], [38.1, 154.0], [38.2, 154.0], [38.3, 156.0], [38.4, 157.0], [38.5, 158.0], [38.6, 158.0], [38.7, 159.0], [38.8, 159.0], [38.9, 159.0], [39.0, 159.0], [39.1, 159.0], [39.2, 160.0], [39.3, 160.0], [39.4, 161.0], [39.5, 162.0], [39.6, 162.0], [39.7, 162.0], [39.8, 163.0], [39.9, 163.0], [40.0, 163.0], [40.1, 164.0], [40.2, 164.0], [40.3, 164.0], [40.4, 164.0], [40.5, 164.0], [40.6, 164.0], [40.7, 164.0], [40.8, 164.0], [40.9, 164.0], [41.0, 164.0], [41.1, 164.0], [41.2, 164.0], [41.3, 164.0], [41.4, 165.0], [41.5, 165.0], [41.6, 165.0], [41.7, 165.0], [41.8, 165.0], [41.9, 166.0], [42.0, 166.0], [42.1, 166.0], [42.2, 166.0], [42.3, 166.0], [42.4, 166.0], [42.5, 167.0], [42.6, 167.0], [42.7, 167.0], [42.8, 167.0], [42.9, 167.0], [43.0, 167.0], [43.1, 168.0], [43.2, 169.0], [43.3, 169.0], [43.4, 169.0], [43.5, 169.0], [43.6, 169.0], [43.7, 170.0], [43.8, 171.0], [43.9, 171.0], [44.0, 172.0], [44.1, 176.0], [44.2, 176.0], [44.3, 178.0], [44.4, 178.0], [44.5, 181.0], [44.6, 181.0], [44.7, 181.0], [44.8, 182.0], [44.9, 183.0], [45.0, 184.0], [45.1, 184.0], [45.2, 185.0], [45.3, 185.0], [45.4, 185.0], [45.5, 185.0], [45.6, 186.0], [45.7, 186.0], [45.8, 186.0], [45.9, 186.0], [46.0, 186.0], [46.1, 186.0], [46.2, 187.0], [46.3, 187.0], [46.4, 187.0], [46.5, 187.0], [46.6, 188.0], [46.7, 188.0], [46.8, 188.0], [46.9, 188.0], [47.0, 188.0], [47.1, 188.0], [47.2, 189.0], [47.3, 189.0], [47.4, 189.0], [47.5, 189.0], [47.6, 189.0], [47.7, 189.0], [47.8, 189.0], [47.9, 190.0], [48.0, 190.0], [48.1, 190.0], [48.2, 190.0], [48.3, 190.0], [48.4, 190.0], [48.5, 190.0], [48.6, 190.0], [48.7, 191.0], [48.8, 191.0], [48.9, 191.0], [49.0, 191.0], [49.1, 191.0], [49.2, 191.0], [49.3, 192.0], [49.4, 192.0], [49.5, 192.0], [49.6, 193.0], [49.7, 194.0], [49.8, 194.0], [49.9, 194.0], [50.0, 195.0], [50.1, 195.0], [50.2, 195.0], [50.3, 195.0], [50.4, 196.0], [50.5, 197.0], [50.6, 197.0], [50.7, 197.0], [50.8, 197.0], [50.9, 198.0], [51.0, 198.0], [51.1, 203.0], [51.2, 207.0], [51.3, 211.0], [51.4, 211.0], [51.5, 216.0], [51.6, 217.0], [51.7, 217.0], [51.8, 222.0], [51.9, 222.0], [52.0, 222.0], [52.1, 223.0], [52.2, 223.0], [52.3, 223.0], [52.4, 224.0], [52.5, 224.0], [52.6, 224.0], [52.7, 224.0], [52.8, 225.0], [52.9, 227.0], [53.0, 227.0], [53.1, 227.0], [53.2, 227.0], [53.3, 228.0], [53.4, 228.0], [53.5, 229.0], [53.6, 229.0], [53.7, 233.0], [53.8, 234.0], [53.9, 236.0], [54.0, 237.0], [54.1, 237.0], [54.2, 238.0], [54.3, 241.0], [54.4, 242.0], [54.5, 243.0], [54.6, 243.0], [54.7, 245.0], [54.8, 245.0], [54.9, 247.0], [55.0, 247.0], [55.1, 248.0], [55.2, 250.0], [55.3, 251.0], [55.4, 251.0], [55.5, 252.0], [55.6, 253.0], [55.7, 253.0], [55.8, 253.0], [55.9, 253.0], [56.0, 254.0], [56.1, 254.0], [56.2, 256.0], [56.3, 256.0], [56.4, 256.0], [56.5, 257.0], [56.6, 257.0], [56.7, 258.0], [56.8, 259.0], [56.9, 260.0], [57.0, 260.0], [57.1, 260.0], [57.2, 261.0], [57.3, 261.0], [57.4, 261.0], [57.5, 261.0], [57.6, 261.0], [57.7, 261.0], [57.8, 261.0], [57.9, 261.0], [58.0, 261.0], [58.1, 261.0], [58.2, 261.0], [58.3, 261.0], [58.4, 261.0], [58.5, 262.0], [58.6, 263.0], [58.7, 263.0], [58.8, 264.0], [58.9, 264.0], [59.0, 264.0], [59.1, 264.0], [59.2, 264.0], [59.3, 264.0], [59.4, 264.0], [59.5, 264.0], [59.6, 264.0], [59.7, 264.0], [59.8, 264.0], [59.9, 265.0], [60.0, 265.0], [60.1, 265.0], [60.2, 265.0], [60.3, 265.0], [60.4, 265.0], [60.5, 265.0], [60.6, 265.0], [60.7, 265.0], [60.8, 265.0], [60.9, 266.0], [61.0, 266.0], [61.1, 266.0], [61.2, 266.0], [61.3, 266.0], [61.4, 266.0], [61.5, 266.0], [61.6, 266.0], [61.7, 266.0], [61.8, 266.0], [61.9, 266.0], [62.0, 266.0], [62.1, 267.0], [62.2, 267.0], [62.3, 267.0], [62.4, 267.0], [62.5, 267.0], [62.6, 267.0], [62.7, 267.0], [62.8, 267.0], [62.9, 267.0], [63.0, 267.0], [63.1, 268.0], [63.2, 268.0], [63.3, 268.0], [63.4, 268.0], [63.5, 268.0], [63.6, 268.0], [63.7, 268.0], [63.8, 268.0], [63.9, 268.0], [64.0, 268.0], [64.1, 268.0], [64.2, 268.0], [64.3, 268.0], [64.4, 268.0], [64.5, 268.0], [64.6, 268.0], [64.7, 269.0], [64.8, 269.0], [64.9, 269.0], [65.0, 269.0], [65.1, 269.0], [65.2, 269.0], [65.3, 269.0], [65.4, 269.0], [65.5, 269.0], [65.6, 269.0], [65.7, 269.0], [65.8, 270.0], [65.9, 270.0], [66.0, 270.0], [66.1, 270.0], [66.2, 270.0], [66.3, 270.0], [66.4, 270.0], [66.5, 270.0], [66.6, 271.0], [66.7, 271.0], [66.8, 271.0], [66.9, 271.0], [67.0, 271.0], [67.1, 272.0], [67.2, 272.0], [67.3, 272.0], [67.4, 273.0], [67.5, 273.0], [67.6, 273.0], [67.7, 273.0], [67.8, 273.0], [67.9, 273.0], [68.0, 273.0], [68.1, 273.0], [68.2, 273.0], [68.3, 274.0], [68.4, 274.0], [68.5, 274.0], [68.6, 274.0], [68.7, 274.0], [68.8, 274.0], [68.9, 274.0], [69.0, 274.0], [69.1, 274.0], [69.2, 274.0], [69.3, 274.0], [69.4, 274.0], [69.5, 274.0], [69.6, 274.0], [69.7, 274.0], [69.8, 274.0], [69.9, 274.0], [70.0, 274.0], [70.1, 274.0], [70.2, 274.0], [70.3, 275.0], [70.4, 275.0], [70.5, 275.0], [70.6, 275.0], [70.7, 275.0], [70.8, 275.0], [70.9, 275.0], [71.0, 275.0], [71.1, 275.0], [71.2, 275.0], [71.3, 275.0], [71.4, 275.0], [71.5, 275.0], [71.6, 275.0], [71.7, 276.0], [71.8, 276.0], [71.9, 276.0], [72.0, 276.0], [72.1, 276.0], [72.2, 276.0], [72.3, 276.0], [72.4, 276.0], [72.5, 276.0], [72.6, 276.0], [72.7, 276.0], [72.8, 276.0], [72.9, 277.0], [73.0, 277.0], [73.1, 277.0], [73.2, 277.0], [73.3, 278.0], [73.4, 278.0], [73.5, 278.0], [73.6, 279.0], [73.7, 279.0], [73.8, 279.0], [73.9, 279.0], [74.0, 279.0], [74.1, 279.0], [74.2, 280.0], [74.3, 280.0], [74.4, 280.0], [74.5, 280.0], [74.6, 281.0], [74.7, 281.0], [74.8, 281.0], [74.9, 282.0], [75.0, 282.0], [75.1, 284.0], [75.2, 285.0], [75.3, 286.0], [75.4, 286.0], [75.5, 286.0], [75.6, 287.0], [75.7, 288.0], [75.8, 288.0], [75.9, 288.0], [76.0, 289.0], [76.1, 289.0], [76.2, 289.0], [76.3, 289.0], [76.4, 290.0], [76.5, 290.0], [76.6, 290.0], [76.7, 291.0], [76.8, 291.0], [76.9, 291.0], [77.0, 292.0], [77.1, 292.0], [77.2, 292.0], [77.3, 292.0], [77.4, 292.0], [77.5, 294.0], [77.6, 294.0], [77.7, 294.0], [77.8, 295.0], [77.9, 295.0], [78.0, 295.0], [78.1, 295.0], [78.2, 296.0], [78.3, 297.0], [78.4, 297.0], [78.5, 298.0], [78.6, 298.0], [78.7, 299.0], [78.8, 299.0], [78.9, 299.0], [79.0, 299.0], [79.1, 299.0], [79.2, 300.0], [79.3, 300.0], [79.4, 300.0], [79.5, 300.0], [79.6, 300.0], [79.7, 301.0], [79.8, 301.0], [79.9, 301.0], [80.0, 302.0], [80.1, 303.0], [80.2, 303.0], [80.3, 303.0], [80.4, 303.0], [80.5, 303.0], [80.6, 304.0], [80.7, 304.0], [80.8, 304.0], [80.9, 305.0], [81.0, 305.0], [81.1, 305.0], [81.2, 305.0], [81.3, 306.0], [81.4, 306.0], [81.5, 307.0], [81.6, 307.0], [81.7, 307.0], [81.8, 308.0], [81.9, 308.0], [82.0, 308.0], [82.1, 308.0], [82.2, 309.0], [82.3, 309.0], [82.4, 309.0], [82.5, 309.0], [82.6, 309.0], [82.7, 309.0], [82.8, 310.0], [82.9, 310.0], [83.0, 310.0], [83.1, 310.0], [83.2, 311.0], [83.3, 311.0], [83.4, 311.0], [83.5, 312.0], [83.6, 313.0], [83.7, 314.0], [83.8, 315.0], [83.9, 315.0], [84.0, 315.0], [84.1, 315.0], [84.2, 316.0], [84.3, 317.0], [84.4, 318.0], [84.5, 320.0], [84.6, 320.0], [84.7, 321.0], [84.8, 322.0], [84.9, 323.0], [85.0, 324.0], [85.1, 325.0], [85.2, 326.0], [85.3, 326.0], [85.4, 327.0], [85.5, 327.0], [85.6, 327.0], [85.7, 327.0], [85.8, 329.0], [85.9, 333.0], [86.0, 334.0], [86.1, 334.0], [86.2, 343.0], [86.3, 346.0], [86.4, 359.0], [86.5, 359.0], [86.6, 359.0], [86.7, 364.0], [86.8, 364.0], [86.9, 365.0], [87.0, 365.0], [87.1, 367.0], [87.2, 369.0], [87.3, 371.0], [87.4, 372.0], [87.5, 372.0], [87.6, 373.0], [87.7, 374.0], [87.8, 374.0], [87.9, 374.0], [88.0, 375.0], [88.1, 376.0], [88.2, 378.0], [88.3, 381.0], [88.4, 381.0], [88.5, 381.0], [88.6, 381.0], [88.7, 381.0], [88.8, 381.0], [88.9, 381.0], [89.0, 381.0], [89.1, 382.0], [89.2, 382.0], [89.3, 382.0], [89.4, 382.0], [89.5, 383.0], [89.6, 383.0], [89.7, 383.0], [89.8, 383.0], [89.9, 383.0], [90.0, 384.0], [90.1, 384.0], [90.2, 384.0], [90.3, 385.0], [90.4, 385.0], [90.5, 385.0], [90.6, 385.0], [90.7, 386.0], [90.8, 386.0], [90.9, 387.0], [91.0, 388.0], [91.1, 389.0], [91.2, 390.0], [91.3, 391.0], [91.4, 391.0], [91.5, 391.0], [91.6, 393.0], [91.7, 393.0], [91.8, 394.0], [91.9, 396.0], [92.0, 397.0], [92.1, 398.0], [92.2, 400.0], [92.3, 401.0], [92.4, 403.0], [92.5, 404.0], [92.6, 406.0], [92.7, 407.0], [92.8, 408.0], [92.9, 411.0], [93.0, 412.0], [93.1, 412.0], [93.2, 412.0], [93.3, 412.0], [93.4, 413.0], [93.5, 413.0], [93.6, 413.0], [93.7, 414.0], [93.8, 414.0], [93.9, 414.0], [94.0, 416.0], [94.1, 416.0], [94.2, 416.0], [94.3, 417.0], [94.4, 417.0], [94.5, 417.0], [94.6, 418.0], [94.7, 418.0], [94.8, 419.0], [94.9, 419.0], [95.0, 419.0], [95.1, 425.0], [95.2, 426.0], [95.3, 426.0], [95.4, 427.0], [95.5, 427.0], [95.6, 427.0], [95.7, 429.0], [95.8, 429.0], [95.9, 430.0], [96.0, 431.0], [96.1, 432.0], [96.2, 434.0], [96.3, 437.0], [96.4, 442.0], [96.5, 447.0], [96.6, 447.0], [96.7, 448.0], [96.8, 452.0], [96.9, 463.0], [97.0, 463.0], [97.1, 464.0], [97.2, 464.0], [97.3, 466.0], [97.4, 467.0], [97.5, 469.0], [97.6, 473.0], [97.7, 474.0], [97.8, 482.0], [97.9, 483.0], [98.0, 484.0], [98.1, 484.0], [98.2, 485.0], [98.3, 485.0], [98.4, 486.0], [98.5, 486.0], [98.6, 486.0], [98.7, 487.0], [98.8, 493.0], [98.9, 494.0], [99.0, 496.0], [99.1, 496.0], [99.2, 497.0], [99.3, 499.0], [99.4, 501.0], [99.5, 502.0], [99.6, 502.0], [99.7, 503.0], [99.8, 505.0], [99.9, 506.0]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 4.0], [4.9, 4.0], [5.0, 4.0], [5.1, 4.0], [5.2, 4.0], [5.3, 4.0], [5.4, 4.0], [5.5, 4.0], [5.6, 4.0], [5.7, 4.0], [5.8, 4.0], [5.9, 4.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 5.0], [15.8, 5.0], [15.9, 5.0], [16.0, 5.0], [16.1, 5.0], [16.2, 5.0], [16.3, 5.0], [16.4, 5.0], [16.5, 5.0], [16.6, 5.0], [16.7, 5.0], [16.8, 5.0], [16.9, 5.0], [17.0, 5.0], [17.1, 5.0], [17.2, 5.0], [17.3, 5.0], [17.4, 5.0], [17.5, 5.0], [17.6, 5.0], [17.7, 5.0], [17.8, 5.0], [17.9, 5.0], [18.0, 5.0], [18.1, 5.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 5.0], [18.9, 5.0], [19.0, 5.0], [19.1, 5.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 5.0], [21.8, 5.0], [21.9, 5.0], [22.0, 5.0], [22.1, 5.0], [22.2, 5.0], [22.3, 5.0], [22.4, 5.0], [22.5, 5.0], [22.6, 5.0], [22.7, 5.0], [22.8, 5.0], [22.9, 5.0], [23.0, 5.0], [23.1, 5.0], [23.2, 5.0], [23.3, 5.0], [23.4, 5.0], [23.5, 5.0], [23.6, 5.0], [23.7, 5.0], [23.8, 5.0], [23.9, 5.0], [24.0, 5.0], [24.1, 5.0], [24.2, 5.0], [24.3, 5.0], [24.4, 5.0], [24.5, 5.0], [24.6, 5.0], [24.7, 5.0], [24.8, 5.0], [24.9, 5.0], [25.0, 5.0], [25.1, 5.0], [25.2, 6.0], [25.3, 6.0], [25.4, 6.0], [25.5, 6.0], [25.6, 6.0], [25.7, 6.0], [25.8, 6.0], [25.9, 6.0], [26.0, 6.0], [26.1, 6.0], [26.2, 6.0], [26.3, 6.0], [26.4, 6.0], [26.5, 6.0], [26.6, 6.0], [26.7, 6.0], [26.8, 6.0], [26.9, 6.0], [27.0, 6.0], [27.1, 6.0], [27.2, 6.0], [27.3, 6.0], [27.4, 6.0], [27.5, 6.0], [27.6, 6.0], [27.7, 6.0], [27.8, 6.0], [27.9, 6.0], [28.0, 6.0], [28.1, 6.0], [28.2, 6.0], [28.3, 6.0], [28.4, 6.0], [28.5, 6.0], [28.6, 6.0], [28.7, 6.0], [28.8, 6.0], [28.9, 6.0], [29.0, 6.0], [29.1, 6.0], [29.2, 6.0], [29.3, 6.0], [29.4, 6.0], [29.5, 6.0], [29.6, 6.0], [29.7, 6.0], [29.8, 6.0], [29.9, 6.0], [30.0, 6.0], [30.1, 6.0], [30.2, 6.0], [30.3, 6.0], [30.4, 6.0], [30.5, 6.0], [30.6, 7.0], [30.7, 7.0], [30.8, 7.0], [30.9, 7.0], [31.0, 7.0], [31.1, 7.0], [31.2, 7.0], [31.3, 7.0], [31.4, 7.0], [31.5, 7.0], [31.6, 7.0], [31.7, 7.0], [31.8, 7.0], [31.9, 7.0], [32.0, 7.0], [32.1, 7.0], [32.2, 7.0], [32.3, 7.0], [32.4, 7.0], [32.5, 7.0], [32.6, 7.0], [32.7, 7.0], [32.8, 7.0], [32.9, 7.0], [33.0, 7.0], [33.1, 7.0], [33.2, 7.0], [33.3, 7.0], [33.4, 7.0], [33.5, 7.0], [33.6, 7.0], [33.7, 7.0], [33.8, 7.0], [33.9, 7.0], [34.0, 7.0], [34.1, 7.0], [34.2, 7.0], [34.3, 7.0], [34.4, 8.0], [34.5, 8.0], [34.6, 8.0], [34.7, 8.0], [34.8, 8.0], [34.9, 8.0], [35.0, 8.0], [35.1, 8.0], [35.2, 8.0], [35.3, 8.0], [35.4, 8.0], [35.5, 8.0], [35.6, 8.0], [35.7, 8.0], [35.8, 8.0], [35.9, 8.0], [36.0, 8.0], [36.1, 8.0], [36.2, 8.0], [36.3, 8.0], [36.4, 8.0], [36.5, 8.0], [36.6, 8.0], [36.7, 8.0], [36.8, 8.0], [36.9, 8.0], [37.0, 8.0], [37.1, 8.0], [37.2, 8.0], [37.3, 8.0], [37.4, 8.0], [37.5, 8.0], [37.6, 8.0], [37.7, 8.0], [37.8, 8.0], [37.9, 8.0], [38.0, 8.0], [38.1, 8.0], [38.2, 8.0], [38.3, 9.0], [38.4, 9.0], [38.5, 9.0], [38.6, 9.0], [38.7, 9.0], [38.8, 9.0], [38.9, 9.0], [39.0, 9.0], [39.1, 9.0], [39.2, 9.0], [39.3, 9.0], [39.4, 9.0], [39.5, 9.0], [39.6, 9.0], [39.7, 9.0], [39.8, 9.0], [39.9, 10.0], [40.0, 10.0], [40.1, 10.0], [40.2, 10.0], [40.3, 10.0], [40.4, 10.0], [40.5, 10.0], [40.6, 10.0], [40.7, 10.0], [40.8, 10.0], [40.9, 10.0], [41.0, 10.0], [41.1, 10.0], [41.2, 10.0], [41.3, 10.0], [41.4, 10.0], [41.5, 11.0], [41.6, 11.0], [41.7, 11.0], [41.8, 11.0], [41.9, 11.0], [42.0, 11.0], [42.1, 11.0], [42.2, 11.0], [42.3, 11.0], [42.4, 11.0], [42.5, 12.0], [42.6, 12.0], [42.7, 12.0], [42.8, 12.0], [42.9, 12.0], [43.0, 12.0], [43.1, 12.0], [43.2, 12.0], [43.3, 12.0], [43.4, 12.0], [43.5, 13.0], [43.6, 13.0], [43.7, 13.0], [43.8, 13.0], [43.9, 13.0], [44.0, 13.0], [44.1, 14.0], [44.2, 14.0], [44.3, 14.0], [44.4, 14.0], [44.5, 14.0], [44.6, 14.0], [44.7, 14.0], [44.8, 14.0], [44.9, 15.0], [45.0, 15.0], [45.1, 15.0], [45.2, 15.0], [45.3, 15.0], [45.4, 15.0], [45.5, 16.0], [45.6, 16.0], [45.7, 16.0], [45.8, 16.0], [45.9, 16.0], [46.0, 16.0], [46.1, 16.0], [46.2, 17.0], [46.3, 17.0], [46.4, 17.0], [46.5, 17.0], [46.6, 17.0], [46.7, 17.0], [46.8, 17.0], [46.9, 18.0], [47.0, 18.0], [47.1, 18.0], [47.2, 18.0], [47.3, 18.0], [47.4, 18.0], [47.5, 18.0], [47.6, 19.0], [47.7, 19.0], [47.8, 19.0], [47.9, 19.0], [48.0, 19.0], [48.1, 19.0], [48.2, 19.0], [48.3, 20.0], [48.4, 20.0], [48.5, 20.0], [48.6, 20.0], [48.7, 20.0], [48.8, 21.0], [48.9, 21.0], [49.0, 21.0], [49.1, 21.0], [49.2, 21.0], [49.3, 22.0], [49.4, 22.0], [49.5, 22.0], [49.6, 22.0], [49.7, 23.0], [49.8, 23.0], [49.9, 23.0], [50.0, 23.0], [50.1, 23.0], [50.2, 24.0], [50.3, 24.0], [50.4, 24.0], [50.5, 24.0], [50.6, 24.0], [50.7, 24.0], [50.8, 24.0], [50.9, 24.0], [51.0, 25.0], [51.1, 25.0], [51.2, 25.0], [51.3, 25.0], [51.4, 25.0], [51.5, 25.0], [51.6, 25.0], [51.7, 25.0], [51.8, 25.0], [51.9, 25.0], [52.0, 25.0], [52.1, 25.0], [52.2, 26.0], [52.3, 26.0], [52.4, 26.0], [52.5, 26.0], [52.6, 26.0], [52.7, 26.0], [52.8, 26.0], [52.9, 26.0], [53.0, 26.0], [53.1, 26.0], [53.2, 27.0], [53.3, 27.0], [53.4, 27.0], [53.5, 27.0], [53.6, 27.0], [53.7, 27.0], [53.8, 27.0], [53.9, 27.0], [54.0, 27.0], [54.1, 27.0], [54.2, 27.0], [54.3, 28.0], [54.4, 28.0], [54.5, 28.0], [54.6, 28.0], [54.7, 28.0], [54.8, 28.0], [54.9, 28.0], [55.0, 29.0], [55.1, 29.0], [55.2, 29.0], [55.3, 29.0], [55.4, 29.0], [55.5, 30.0], [55.6, 30.0], [55.7, 31.0], [55.8, 32.0], [55.9, 33.0], [56.0, 33.0], [56.1, 34.0], [56.2, 34.0], [56.3, 37.0], [56.4, 37.0], [56.5, 38.0], [56.6, 40.0], [56.7, 41.0], [56.8, 41.0], [56.9, 43.0], [57.0, 43.0], [57.1, 44.0], [57.2, 44.0], [57.3, 45.0], [57.4, 45.0], [57.5, 47.0], [57.6, 48.0], [57.7, 49.0], [57.8, 49.0], [57.9, 49.0], [58.0, 50.0], [58.1, 52.0], [58.2, 53.0], [58.3, 60.0], [58.4, 60.0], [58.5, 60.0], [58.6, 61.0], [58.7, 64.0], [58.8, 66.0], [58.9, 69.0], [59.0, 73.0], [59.1, 74.0], [59.2, 75.0], [59.3, 77.0], [59.4, 77.0], [59.5, 78.0], [59.6, 79.0], [59.7, 79.0], [59.8, 79.0], [59.9, 80.0], [60.0, 80.0], [60.1, 81.0], [60.2, 81.0], [60.3, 82.0], [60.4, 83.0], [60.5, 83.0], [60.6, 83.0], [60.7, 83.0], [60.8, 83.0], [60.9, 84.0], [61.0, 84.0], [61.1, 84.0], [61.2, 86.0], [61.3, 86.0], [61.4, 87.0], [61.5, 87.0], [61.6, 88.0], [61.7, 89.0], [61.8, 90.0], [61.9, 90.0], [62.0, 90.0], [62.1, 90.0], [62.2, 90.0], [62.3, 91.0], [62.4, 91.0], [62.5, 94.0], [62.6, 94.0], [62.7, 94.0], [62.8, 95.0], [62.9, 95.0], [63.0, 95.0], [63.1, 95.0], [63.2, 95.0], [63.3, 95.0], [63.4, 96.0], [63.5, 96.0], [63.6, 96.0], [63.7, 97.0], [63.8, 97.0], [63.9, 97.0], [64.0, 98.0], [64.1, 98.0], [64.2, 99.0], [64.3, 99.0], [64.4, 99.0], [64.5, 99.0], [64.6, 99.0], [64.7, 99.0], [64.8, 99.0], [64.9, 99.0], [65.0, 100.0], [65.1, 100.0], [65.2, 100.0], [65.3, 101.0], [65.4, 101.0], [65.5, 101.0], [65.6, 101.0], [65.7, 102.0], [65.8, 102.0], [65.9, 102.0], [66.0, 102.0], [66.1, 103.0], [66.2, 103.0], [66.3, 103.0], [66.4, 103.0], [66.5, 103.0], [66.6, 103.0], [66.7, 104.0], [66.8, 104.0], [66.9, 104.0], [67.0, 105.0], [67.1, 105.0], [67.2, 105.0], [67.3, 106.0], [67.4, 106.0], [67.5, 106.0], [67.6, 106.0], [67.7, 107.0], [67.8, 108.0], [67.9, 108.0], [68.0, 109.0], [68.1, 109.0], [68.2, 109.0], [68.3, 109.0], [68.4, 109.0], [68.5, 109.0], [68.6, 109.0], [68.7, 109.0], [68.8, 109.0], [68.9, 109.0], [69.0, 109.0], [69.1, 110.0], [69.2, 110.0], [69.3, 110.0], [69.4, 110.0], [69.5, 110.0], [69.6, 110.0], [69.7, 110.0], [69.8, 110.0], [69.9, 110.0], [70.0, 110.0], [70.1, 110.0], [70.2, 110.0], [70.3, 110.0], [70.4, 110.0], [70.5, 110.0], [70.6, 110.0], [70.7, 110.0], [70.8, 111.0], [70.9, 111.0], [71.0, 111.0], [71.1, 111.0], [71.2, 111.0], [71.3, 111.0], [71.4, 111.0], [71.5, 111.0], [71.6, 111.0], [71.7, 111.0], [71.8, 111.0], [71.9, 111.0], [72.0, 111.0], [72.1, 111.0], [72.2, 111.0], [72.3, 111.0], [72.4, 111.0], [72.5, 112.0], [72.6, 112.0], [72.7, 112.0], [72.8, 112.0], [72.9, 112.0], [73.0, 112.0], [73.1, 112.0], [73.2, 112.0], [73.3, 112.0], [73.4, 112.0], [73.5, 112.0], [73.6, 112.0], [73.7, 112.0], [73.8, 113.0], [73.9, 113.0], [74.0, 113.0], [74.1, 113.0], [74.2, 113.0], [74.3, 113.0], [74.4, 113.0], [74.5, 113.0], [74.6, 113.0], [74.7, 113.0], [74.8, 113.0], [74.9, 113.0], [75.0, 113.0], [75.1, 113.0], [75.2, 113.0], [75.3, 113.0], [75.4, 114.0], [75.5, 114.0], [75.6, 114.0], [75.7, 114.0], [75.8, 114.0], [75.9, 114.0], [76.0, 114.0], [76.1, 114.0], [76.2, 114.0], [76.3, 114.0], [76.4, 114.0], [76.5, 114.0], [76.6, 115.0], [76.7, 115.0], [76.8, 115.0], [76.9, 115.0], [77.0, 115.0], [77.1, 115.0], [77.2, 115.0], [77.3, 115.0], [77.4, 115.0], [77.5, 115.0], [77.6, 115.0], [77.7, 115.0], [77.8, 115.0], [77.9, 116.0], [78.0, 116.0], [78.1, 116.0], [78.2, 116.0], [78.3, 116.0], [78.4, 116.0], [78.5, 116.0], [78.6, 116.0], [78.7, 116.0], [78.8, 116.0], [78.9, 116.0], [79.0, 116.0], [79.1, 116.0], [79.2, 116.0], [79.3, 117.0], [79.4, 117.0], [79.5, 117.0], [79.6, 117.0], [79.7, 117.0], [79.8, 117.0], [79.9, 118.0], [80.0, 118.0], [80.1, 118.0], [80.2, 118.0], [80.3, 118.0], [80.4, 119.0], [80.5, 120.0], [80.6, 122.0], [80.7, 122.0], [80.8, 123.0], [80.9, 123.0], [81.0, 124.0], [81.1, 125.0], [81.2, 126.0], [81.3, 127.0], [81.4, 127.0], [81.5, 127.0], [81.6, 127.0], [81.7, 127.0], [81.8, 127.0], [81.9, 127.0], [82.0, 128.0], [82.1, 128.0], [82.2, 129.0], [82.3, 130.0], [82.4, 130.0], [82.5, 130.0], [82.6, 130.0], [82.7, 133.0], [82.8, 133.0], [82.9, 134.0], [83.0, 135.0], [83.1, 138.0], [83.2, 138.0], [83.3, 140.0], [83.4, 144.0], [83.5, 149.0], [83.6, 152.0], [83.7, 168.0], [83.8, 168.0], [83.9, 169.0], [84.0, 169.0], [84.1, 169.0], [84.2, 170.0], [84.3, 170.0], [84.4, 170.0], [84.5, 170.0], [84.6, 171.0], [84.7, 171.0], [84.8, 171.0], [84.9, 171.0], [85.0, 171.0], [85.1, 172.0], [85.2, 173.0], [85.3, 173.0], [85.4, 173.0], [85.5, 173.0], [85.6, 174.0], [85.7, 174.0], [85.8, 174.0], [85.9, 176.0], [86.0, 176.0], [86.1, 176.0], [86.2, 176.0], [86.3, 176.0], [86.4, 177.0], [86.5, 177.0], [86.6, 177.0], [86.7, 177.0], [86.8, 178.0], [86.9, 178.0], [87.0, 178.0], [87.1, 179.0], [87.2, 179.0], [87.3, 180.0], [87.4, 180.0], [87.5, 180.0], [87.6, 180.0], [87.7, 180.0], [87.8, 180.0], [87.9, 180.0], [88.0, 181.0], [88.1, 181.0], [88.2, 181.0], [88.3, 181.0], [88.4, 181.0], [88.5, 181.0], [88.6, 182.0], [88.7, 182.0], [88.8, 182.0], [88.9, 182.0], [89.0, 182.0], [89.1, 183.0], [89.2, 183.0], [89.3, 183.0], [89.4, 183.0], [89.5, 184.0], [89.6, 185.0], [89.7, 185.0], [89.8, 185.0], [89.9, 185.0], [90.0, 185.0], [90.1, 185.0], [90.2, 186.0], [90.3, 186.0], [90.4, 186.0], [90.5, 186.0], [90.6, 187.0], [90.7, 187.0], [90.8, 187.0], [90.9, 187.0], [91.0, 187.0], [91.1, 187.0], [91.2, 187.0], [91.3, 187.0], [91.4, 187.0], [91.5, 187.0], [91.6, 187.0], [91.7, 187.0], [91.8, 188.0], [91.9, 188.0], [92.0, 188.0], [92.1, 188.0], [92.2, 188.0], [92.3, 188.0], [92.4, 188.0], [92.5, 189.0], [92.6, 189.0], [92.7, 189.0], [92.8, 190.0], [92.9, 190.0], [93.0, 190.0], [93.1, 191.0], [93.2, 191.0], [93.3, 191.0], [93.4, 191.0], [93.5, 191.0], [93.6, 191.0], [93.7, 192.0], [93.8, 192.0], [93.9, 192.0], [94.0, 192.0], [94.1, 192.0], [94.2, 193.0], [94.3, 193.0], [94.4, 193.0], [94.5, 193.0], [94.6, 193.0], [94.7, 194.0], [94.8, 194.0], [94.9, 194.0], [95.0, 195.0], [95.1, 195.0], [95.2, 195.0], [95.3, 195.0], [95.4, 195.0], [95.5, 196.0], [95.6, 196.0], [95.7, 196.0], [95.8, 196.0], [95.9, 196.0], [96.0, 196.0], [96.1, 196.0], [96.2, 196.0], [96.3, 196.0], [96.4, 196.0], [96.5, 196.0], [96.6, 196.0], [96.7, 196.0], [96.8, 197.0], [96.9, 197.0], [97.0, 197.0], [97.1, 197.0], [97.2, 197.0], [97.3, 198.0], [97.4, 198.0], [97.5, 198.0], [97.6, 198.0], [97.7, 198.0], [97.8, 198.0], [97.9, 198.0], [98.0, 198.0], [98.1, 198.0], [98.2, 198.0], [98.3, 198.0], [98.4, 198.0], [98.5, 198.0], [98.6, 199.0], [98.7, 199.0], [98.8, 199.0], [98.9, 199.0], [99.0, 199.0], [99.1, 200.0], [99.2, 200.0], [99.3, 200.0], [99.4, 200.0], [99.5, 200.0], [99.6, 211.0], [99.7, 239.0], [99.8, 242.0], [99.9, 247.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 649.0, "series": [{"data": [[31900.0, 1.0], [32700.0, 1.0], [32900.0, 9.0], [34200.0, 9.0], [34100.0, 4.0], [34300.0, 9.0], [34500.0, 7.0], [34600.0, 13.0], [34700.0, 18.0], [34800.0, 15.0], [33800.0, 2.0], [33300.0, 17.0], [34400.0, 14.0], [33100.0, 12.0], [33000.0, 4.0], [33400.0, 22.0], [33500.0, 14.0], [33600.0, 9.0], [33700.0, 7.0], [32800.0, 2.0], [33200.0, 13.0], [36800.0, 17.0], [35100.0, 17.0], [36300.0, 31.0], [35800.0, 20.0], [35600.0, 13.0], [35700.0, 23.0], [35500.0, 23.0], [35400.0, 17.0], [35000.0, 8.0], [34900.0, 12.0], [36200.0, 18.0], [36000.0, 19.0], [36100.0, 18.0], [35300.0, 25.0], [35200.0, 10.0], [35900.0, 16.0], [36500.0, 27.0], [36700.0, 21.0], [36600.0, 18.0], [36400.0, 21.0], [37200.0, 22.0], [38200.0, 23.0], [37600.0, 17.0], [37400.0, 19.0], [37500.0, 26.0], [38300.0, 26.0], [37100.0, 21.0], [37000.0, 12.0], [38400.0, 26.0], [38500.0, 20.0], [38600.0, 18.0], [38700.0, 27.0], [37900.0, 23.0], [38800.0, 25.0], [38900.0, 11.0], [38000.0, 19.0], [38100.0, 21.0], [37300.0, 14.0], [36900.0, 16.0], [37800.0, 15.0], [37700.0, 20.0], [39000.0, 3.0]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[0.0, 629.0], [300.0, 10.0], [100.0, 281.0], [200.0, 78.0], [400.0, 2.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[0.0, 292.0], [300.0, 131.0], [100.0, 218.0], [200.0, 281.0], [400.0, 72.0], [500.0, 6.0]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[0.0, 649.0], [100.0, 342.0], [200.0, 9.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 39000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2994.0, "series": [{"data": [[0.0, 2994.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 879.7329999999987, "minX": 1.69381932E12, "maxY": 879.7329999999987, "series": [{"data": [[1.69381932E12, 879.7329999999987]], "isOverall": false, "label": "Logiqids", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381932E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.0, "minX": 57.0, "maxY": 36416.43, "series": [{"data": [[1000.0, 36416.43]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1000.0, 36416.43]], "isOverall": false, "label": "Logiqids_Landing_Page-Aggregated", "isController": false}, {"data": [[57.0, 248.0], [58.0, 354.0], [60.0, 403.5], [62.0, 241.5], [66.0, 314.5], [64.0, 331.0], [70.0, 317.0], [68.0, 222.5], [75.0, 306.5], [74.0, 320.5], [72.0, 192.5], [79.0, 207.0], [77.0, 288.5], [83.0, 204.5], [81.0, 230.5], [87.0, 170.5], [85.0, 207.0], [91.0, 187.0], [89.0, 225.5], [95.0, 196.0], [93.0, 261.5], [99.0, 261.0], [98.0, 136.5], [97.0, 194.0], [102.0, 165.5], [101.0, 237.5], [107.0, 157.5], [106.0, 209.0], [104.0, 231.0], [111.0, 222.66666666666666], [109.0, 127.0], [114.0, 140.33333333333334], [112.0, 182.5], [118.0, 270.0], [116.0, 205.66666666666666], [122.0, 214.0], [120.0, 220.5], [126.0, 221.0], [124.0, 165.0], [134.0, 180.0], [132.0, 248.5], [130.0, 194.0], [129.0, 147.0], [128.0, 246.5], [143.0, 209.0], [141.0, 211.5], [140.0, 199.5], [139.0, 135.0], [137.0, 175.0], [136.0, 238.0], [151.0, 234.0], [149.0, 146.0], [148.0, 209.5], [146.0, 175.5], [144.0, 199.0], [159.0, 156.5], [157.0, 123.0], [155.0, 185.33333333333334], [153.0, 151.0], [166.0, 208.0], [165.0, 159.5], [163.0, 193.33333333333334], [161.0, 169.0], [175.0, 172.66666666666666], [173.0, 166.5], [171.0, 173.5], [169.0, 192.5], [168.0, 197.0], [183.0, 203.33333333333334], [182.0, 140.0], [181.0, 215.5], [179.0, 216.0], [177.0, 122.0], [191.0, 219.0], [189.0, 212.0], [187.0, 137.0], [185.0, 127.0], [199.0, 139.0], [198.0, 125.0], [197.0, 166.0], [195.0, 123.0], [193.0, 135.0], [207.0, 175.0], [205.0, 101.0], [203.0, 148.0], [201.0, 187.0], [215.0, 169.0], [213.0, 125.66666666666666], [211.0, 144.5], [209.0, 157.66666666666666], [222.0, 143.0], [221.0, 149.0], [219.0, 112.0], [218.0, 113.5], [217.0, 173.0], [231.0, 99.5], [229.0, 142.0], [228.0, 151.5], [226.0, 104.75], [224.0, 102.5], [239.0, 144.0], [237.0, 99.0], [236.0, 101.0], [234.0, 126.0], [232.0, 126.0], [247.0, 96.0], [245.0, 50.0], [243.0, 67.66666666666667], [241.0, 112.0], [255.0, 139.0], [253.0, 153.66666666666666], [251.0, 108.5], [249.0, 166.0], [269.0, 81.0], [270.0, 13.0], [268.0, 152.0], [267.0, 16.0], [266.0, 47.5], [264.0, 88.5], [263.0, 70.5], [261.0, 104.5], [259.0, 131.0], [257.0, 94.33333333333334], [285.0, 10.5], [287.0, 27.5], [284.0, 76.5], [282.0, 11.0], [281.0, 41.0], [279.0, 70.5], [277.0, 9.0], [276.0, 73.5], [274.0, 85.5], [272.0, 80.0], [301.0, 34.0], [303.0, 72.5], [300.0, 20.0], [291.0, 73.0], [290.0, 20.0], [288.0, 14.0], [299.0, 21.0], [298.0, 25.0], [297.0, 69.0], [296.0, 13.5], [294.0, 24.5], [292.0, 51.5], [317.0, 99.0], [318.0, 61.5], [316.0, 25.5], [306.0, 73.5], [304.0, 31.0], [314.0, 53.0], [312.0, 75.0], [311.0, 24.5], [310.0, 29.5], [309.0, 28.0], [308.0, 83.5], [323.0, 88.0], [335.0, 70.5], [333.0, 48.0], [331.0, 77.5], [330.0, 84.0], [329.0, 72.5], [327.0, 80.0], [326.0, 30.0], [325.0, 20.5], [322.0, 64.0], [320.0, 40.0], [349.0, 44.0], [350.0, 31.0], [348.0, 37.0], [339.0, 34.0], [338.0, 28.0], [336.0, 70.0], [347.0, 35.0], [345.0, 37.0], [344.0, 49.5], [342.0, 31.0], [341.0, 32.0], [340.0, 36.0], [365.0, 31.0], [367.0, 31.5], [364.0, 34.0], [355.0, 40.5], [353.0, 41.0], [352.0, 48.5], [363.0, 33.5], [361.0, 35.0], [360.0, 35.0], [359.0, 39.0], [358.0, 39.5], [357.0, 38.0], [381.0, 17.0], [382.0, 52.0], [380.0, 48.0], [379.0, 39.0], [377.0, 18.0], [376.0, 41.5], [374.0, 47.5], [372.0, 51.0], [371.0, 26.0], [370.0, 26.0], [369.0, 27.666666666666668], [397.0, 23.0], [393.0, 25.0], [388.0, 43.0], [387.0, 27.0], [386.0, 49.0], [385.0, 14.0], [384.0, 17.0], [415.0, 7.0], [413.0, 9.0], [411.0, 10.0], [410.0, 19.5], [408.0, 23.5], [406.0, 40.0], [402.0, 29.0], [429.0, 4.0], [425.0, 6.0], [423.0, 7.0], [422.0, 14.0], [421.0, 8.0], [419.0, 12.5], [417.0, 6.0], [446.0, 30.0], [445.0, 9.0], [442.0, 15.0], [440.0, 7.0], [433.0, 7.0], [459.0, 4.0], [453.0, 4.0], [448.0, 4.0], [474.0, 16.0], [465.0, 18.0], [494.0, 5.0], [491.0, 7.0], [487.0, 15.0], [484.0, 16.0], [480.0, 10.0], [497.0, 5.0], [533.0, 5.0], [529.0, 7.0], [572.0, 9.0], [574.0, 9.333333333333334], [561.0, 7.0], [560.0, 23.5], [571.0, 11.0], [570.0, 18.0], [569.0, 6.5], [568.0, 14.0], [558.0, 32.0], [557.0, 8.0], [556.0, 10.0], [555.0, 42.240384615384606], [554.0, 54.66666666666667], [567.0, 12.5], [565.0, 6.0], [564.0, 9.333333333333334], [562.0, 8.0], [601.0, 4.5], [606.0, 5.5], [607.0, 4.0], [593.0, 12.2], [595.0, 11.0], [594.0, 7.0], [604.0, 6.0], [603.0, 9.0], [602.0, 4.0], [591.0, 6.0], [576.0, 16.333333333333332], [578.0, 8.0], [577.0, 20.0], [581.0, 10.0], [579.0, 5.0], [583.0, 6.0], [582.0, 8.0], [590.0, 12.0], [589.0, 5.0], [588.0, 12.0], [587.0, 14.0], [586.0, 7.5], [584.0, 21.0], [599.0, 6.0], [598.0, 4.0], [597.0, 7.5], [596.0, 6.0], [628.0, 8.0], [635.0, 4.0], [636.0, 3.0], [625.0, 8.0], [624.0, 12.0], [627.0, 13.0], [626.0, 14.0], [634.0, 3.0], [633.0, 3.0], [632.0, 4.0], [623.0, 12.0], [621.0, 13.5], [619.0, 12.0], [618.0, 14.0], [617.0, 14.0], [616.0, 15.0], [631.0, 3.0], [630.0, 4.0], [629.0, 7.0], [667.0, 115.5], [671.0, 167.0], [670.0, 87.0], [669.0, 206.5], [665.0, 188.0], [662.0, 82.0], [645.0, 4.0], [642.0, 4.0], [641.0, 5.0], [640.0, 4.0], [690.0, 159.0], [702.0, 153.0], [701.0, 132.5], [699.0, 174.0], [697.0, 148.5], [686.0, 126.0], [673.0, 187.5], [675.0, 120.0], [674.0, 59.0], [679.0, 105.0], [676.0, 109.0], [684.0, 158.5], [683.0, 157.33333333333334], [695.0, 118.0], [694.0, 163.5], [692.0, 163.5], [688.0, 167.0], [722.0, 122.5], [735.0, 40.33333333333333], [733.0, 48.5], [731.0, 98.5], [729.0, 105.66666666666667], [718.0, 105.5], [704.0, 155.5], [707.0, 179.0], [706.0, 129.0], [710.0, 152.5], [708.0, 111.0], [716.0, 152.66666666666666], [714.0, 138.0], [712.0, 159.5], [727.0, 124.5], [725.0, 118.5], [723.0, 107.0], [720.0, 155.0], [766.0, 73.0], [767.0, 130.0], [752.0, 5.0], [764.0, 81.0], [762.0, 36.0], [761.0, 31.0], [760.0, 78.5], [751.0, 96.0], [739.0, 7.5], [737.0, 8.5], [743.0, 86.5], [741.0, 5.666666666666667], [750.0, 58.0], [748.0, 116.0], [746.0, 151.0], [745.0, 109.5], [758.0, 99.5], [756.0, 51.0], [754.0, 89.0], [753.0, 19.0], [794.0, 73.0], [786.0, 9.5], [797.0, 104.0], [799.0, 100.5], [784.0, 12.5], [796.0, 20.0], [793.0, 10.5], [775.0, 14.0], [773.0, 63.0], [772.0, 90.0], [770.0, 122.0], [768.0, 5.0], [783.0, 10.0], [782.0, 63.0], [780.0, 12.0], [779.0, 58.5], [777.0, 55.0], [791.0, 120.0], [790.0, 113.5], [788.0, 59.0], [824.0, 72.0], [830.0, 76.0], [831.0, 48.0], [817.0, 80.0], [829.0, 36.0], [827.0, 55.0], [825.0, 4.0], [815.0, 96.0], [803.0, 48.0], [801.0, 61.0], [805.0, 9.5], [804.0, 45.0], [807.0, 93.0], [806.0, 66.0], [814.0, 13.5], [813.0, 13.0], [812.0, 79.0], [811.0, 51.0], [809.0, 10.0], [823.0, 85.0], [822.0, 67.0], [820.0, 69.5], [818.0, 20.0], [861.0, 26.0], [863.0, 27.666666666666668], [859.0, 26.0], [858.0, 25.0], [857.0, 27.0], [856.0, 26.5], [847.0, 29.333333333333332], [832.0, 73.0], [836.0, 38.0], [834.0, 57.0], [839.0, 40.0], [838.0, 48.0], [845.0, 32.0], [844.0, 33.5], [842.0, 47.0], [841.0, 21.5], [854.0, 33.5], [852.0, 28.5], [850.0, 30.0], [849.0, 33.5], [889.0, 9.0], [884.0, 61.0], [894.0, 10.0], [893.0, 6.5], [891.0, 8.0], [879.0, 74.0], [864.0, 27.0], [866.0, 24.0], [865.0, 32.0], [869.0, 29.0], [867.0, 31.0], [871.0, 16.0], [870.0, 23.0], [878.0, 77.0], [876.0, 67.0], [874.0, 71.0], [873.0, 79.5], [872.0, 20.0], [887.0, 12.0], [886.0, 35.0], [885.0, 79.5], [883.0, 67.5], [881.0, 79.0], [916.0, 5.0], [927.0, 6.0], [925.0, 6.0], [922.0, 7.0], [921.0, 6.5], [911.0, 8.0], [897.0, 20.0], [896.0, 7.5], [901.0, 11.5], [898.0, 11.0], [910.0, 7.0], [909.0, 7.0], [906.0, 9.5], [919.0, 3.0], [918.0, 7.0], [917.0, 3.0], [915.0, 5.5], [913.0, 6.0], [956.0, 176.0], [959.0, 182.0], [948.0, 85.5], [946.0, 195.0], [958.0, 180.5], [957.0, 178.0], [955.0, 174.0], [954.0, 175.33333333333334], [953.0, 173.0], [952.0, 174.0], [942.0, 9.0], [932.0, 8.5], [930.0, 4.0], [935.0, 8.0], [933.0, 17.0], [941.0, 6.0], [939.0, 9.666666666666666], [937.0, 10.5], [950.0, 195.0], [949.0, 197.0], [985.0, 117.0], [989.0, 110.0], [991.0, 110.5], [977.0, 121.5], [979.0, 117.0], [978.0, 118.0], [988.0, 111.0], [987.0, 114.0], [986.0, 115.0], [984.0, 118.0], [967.0, 110.0], [966.0, 181.0], [965.0, 191.0], [964.0, 193.0], [963.0, 173.0], [962.0, 181.66666666666666], [961.0, 182.0], [960.0, 183.0], [975.0, 187.0], [974.0, 125.0], [973.0, 158.0], [971.0, 129.0], [970.0, 130.0], [969.0, 120.5], [983.0, 120.0], [982.0, 122.0], [981.0, 123.0], [980.0, 123.0], [1000.0, 106.0], [999.0, 114.0], [998.0, 115.0], [997.0, 115.0], [996.0, 116.0], [995.0, 118.0], [994.0, 112.0], [993.0, 112.0], [992.0, 112.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[525.8179999999999, 84.81899999999996]], "isOverall": false, "label": "Logiqids_Olympiad_Page-Aggregated", "isController": false}, {"data": [[1000.0, 200.817]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1000.0, 200.817]], "isOverall": false, "label": "Logiqids_Login_Page-Aggregated", "isController": false}, {"data": [[922.0, 247.0], [918.0, 239.0], [917.0, 242.0], [956.0, 178.0], [959.0, 195.5], [944.0, 193.0], [948.0, 197.0], [946.0, 193.0], [958.0, 195.75], [957.0, 195.0], [955.0, 170.0], [954.0, 190.6315789473684], [953.0, 198.5], [952.0, 198.33333333333334], [951.0, 198.5], [950.0, 196.625], [985.0, 142.0], [989.0, 113.0], [991.0, 110.8888888888889], [979.0, 156.3846153846154], [978.0, 182.5], [988.0, 127.0], [987.0, 136.0], [986.0, 132.0], [984.0, 133.66666666666666], [967.0, 187.0], [966.0, 188.0], [965.0, 179.66666666666669], [964.0, 189.77777777777777], [963.0, 194.0], [962.0, 189.92307692307693], [961.0, 196.5], [960.0, 196.5], [975.0, 171.58974358974353], [974.0, 167.16666666666666], [973.0, 186.0], [971.0, 187.0], [970.0, 172.5], [983.0, 138.8], [982.0, 136.33333333333334], [981.0, 135.66666666666666], [980.0, 131.5], [1000.0, 28.858321870701513], [999.0, 110.75], [998.0, 112.75], [997.0, 112.94117647058823], [996.0, 111.44444444444443], [995.0, 114.22222222222223], [994.0, 110.66666666666667], [993.0, 110.0], [992.0, 109.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}, {"data": [[993.0889999999999, 64.19400000000005]], "isOverall": false, "label": "Logiqids_Signup_Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11866.666666666666, "minX": 1.69381932E12, "maxY": 211633.33333333334, "series": [{"data": [[1.69381932E12, 211633.33333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69381932E12, 11866.666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381932E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 64.19400000000005, "minX": 1.69381932E12, "maxY": 36416.43, "series": [{"data": [[1.69381932E12, 36416.43]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1.69381932E12, 84.81899999999996]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[1.69381932E12, 200.817]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1.69381932E12, 64.19400000000005]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381932E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 64.13699999999997, "minX": 1.69381932E12, "maxY": 36346.80799999996, "series": [{"data": [[1.69381932E12, 36346.80799999996]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1.69381932E12, 84.77500000000005]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[1.69381932E12, 200.78899999999987]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1.69381932E12, 64.13699999999997]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381932E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69381932E12, "maxY": 34671.600000000006, "series": [{"data": [[1.69381932E12, 34671.600000000006]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1.69381932E12, 0.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[1.69381932E12, 0.0]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1.69381932E12, 0.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381932E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.69381932E12, "maxY": 39031.0, "series": [{"data": [[1.69381932E12, 39031.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69381932E12, 37078.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69381932E12, 38797.97]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69381932E12, 38106.549999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69381932E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69381932E12, 154.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381932E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 55.0, "minX": 12.0, "maxY": 36484.0, "series": [{"data": [[768.0, 36484.0], [12.0, 302.0], [855.0, 55.0], [896.0, 87.5], [474.0, 99.0], [995.0, 195.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 995.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 55.0, "minX": 12.0, "maxY": 36484.0, "series": [{"data": [[768.0, 36484.0], [12.0, 302.0], [855.0, 55.0], [896.0, 87.0], [474.0, 99.0], [995.0, 195.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 995.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.69381926E12, "maxY": 50.0, "series": [{"data": [[1.69381932E12, 50.0], [1.69381926E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381932E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.69381932E12, "maxY": 66.66666666666667, "series": [{"data": [[1.69381932E12, 66.66666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381932E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.69381932E12, "maxY": 16.666666666666668, "series": [{"data": [[1.69381932E12, 16.666666666666668]], "isOverall": false, "label": "Logiqids_Signup_Page-success", "isController": false}, {"data": [[1.69381932E12, 16.666666666666668]], "isOverall": false, "label": "Logiqids_Landing_Page-success", "isController": false}, {"data": [[1.69381932E12, 16.666666666666668]], "isOverall": false, "label": "Logiqids_Login_Page-success", "isController": false}, {"data": [[1.69381932E12, 16.666666666666668]], "isOverall": false, "label": "Logiqids_Olympiad_Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381932E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.69381932E12, "maxY": 66.66666666666667, "series": [{"data": [[1.69381932E12, 66.66666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381932E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

