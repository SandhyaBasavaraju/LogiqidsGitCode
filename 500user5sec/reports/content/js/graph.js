/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 24949.0, "series": [{"data": [[0.0, 18783.0], [0.1, 18783.0], [0.2, 18863.0], [0.3, 18863.0], [0.4, 18892.0], [0.5, 18892.0], [0.6, 18892.0], [0.7, 18979.0], [0.8, 18983.0], [0.9, 18983.0], [1.0, 18983.0], [1.1, 18983.0], [1.2, 18983.0], [1.3, 18987.0], [1.4, 18987.0], [1.5, 18993.0], [1.6, 19023.0], [1.7, 19023.0], [1.8, 19033.0], [1.9, 19033.0], [2.0, 19047.0], [2.1, 19047.0], [2.2, 19099.0], [2.3, 19099.0], [2.4, 19099.0], [2.5, 19107.0], [2.6, 19107.0], [2.7, 19179.0], [2.8, 19179.0], [2.9, 19206.0], [3.0, 19206.0], [3.1, 19225.0], [3.2, 19225.0], [3.3, 19269.0], [3.4, 19269.0], [3.5, 19283.0], [3.6, 19283.0], [3.7, 19336.0], [3.8, 19336.0], [3.9, 19403.0], [4.0, 19403.0], [4.1, 19420.0], [4.2, 19420.0], [4.3, 19455.0], [4.4, 19455.0], [4.5, 19476.0], [4.6, 19476.0], [4.7, 19479.0], [4.8, 19479.0], [4.9, 19523.0], [5.0, 19523.0], [5.1, 19523.0], [5.2, 19523.0], [5.3, 19529.0], [5.4, 19529.0], [5.5, 19536.0], [5.6, 19536.0], [5.7, 19551.0], [5.8, 19551.0], [5.9, 19566.0], [6.0, 19566.0], [6.1, 19602.0], [6.2, 19602.0], [6.3, 19606.0], [6.4, 19606.0], [6.5, 19645.0], [6.6, 19645.0], [6.7, 19665.0], [6.8, 19665.0], [6.9, 19674.0], [7.0, 19674.0], [7.1, 19723.0], [7.2, 19723.0], [7.3, 19789.0], [7.4, 19789.0], [7.5, 19802.0], [7.6, 19802.0], [7.7, 19809.0], [7.8, 19809.0], [7.9, 19825.0], [8.0, 19825.0], [8.1, 19833.0], [8.2, 19833.0], [8.3, 19839.0], [8.4, 19839.0], [8.5, 19867.0], [8.6, 19867.0], [8.7, 19878.0], [8.8, 19878.0], [8.9, 19895.0], [9.0, 19895.0], [9.1, 19901.0], [9.2, 19901.0], [9.3, 19919.0], [9.4, 19922.0], [9.5, 19922.0], [9.6, 19934.0], [9.7, 19934.0], [9.8, 19947.0], [9.9, 19947.0], [10.0, 19960.0], [10.1, 19960.0], [10.2, 19963.0], [10.3, 19963.0], [10.4, 19970.0], [10.5, 19970.0], [10.6, 19976.0], [10.7, 19976.0], [10.8, 19983.0], [10.9, 19983.0], [11.0, 20090.0], [11.1, 20090.0], [11.2, 20125.0], [11.3, 20125.0], [11.4, 20144.0], [11.5, 20144.0], [11.6, 20165.0], [11.7, 20165.0], [11.8, 20170.0], [11.9, 20170.0], [12.0, 20175.0], [12.1, 20175.0], [12.2, 20180.0], [12.3, 20180.0], [12.4, 20196.0], [12.5, 20196.0], [12.6, 20208.0], [12.7, 20208.0], [12.8, 20220.0], [12.9, 20220.0], [13.0, 20227.0], [13.1, 20227.0], [13.2, 20229.0], [13.3, 20229.0], [13.4, 20232.0], [13.5, 20232.0], [13.6, 20295.0], [13.7, 20295.0], [13.8, 20307.0], [13.9, 20307.0], [14.0, 20336.0], [14.1, 20336.0], [14.2, 20354.0], [14.3, 20354.0], [14.4, 20380.0], [14.5, 20380.0], [14.6, 20395.0], [14.7, 20395.0], [14.8, 20412.0], [14.9, 20412.0], [15.0, 20439.0], [15.1, 20439.0], [15.2, 20466.0], [15.3, 20466.0], [15.4, 20482.0], [15.5, 20482.0], [15.6, 20491.0], [15.7, 20491.0], [15.8, 20497.0], [15.9, 20497.0], [16.0, 20497.0], [16.1, 20497.0], [16.2, 20503.0], [16.3, 20503.0], [16.4, 20503.0], [16.5, 20503.0], [16.6, 20509.0], [16.7, 20509.0], [16.8, 20525.0], [16.9, 20525.0], [17.0, 20534.0], [17.1, 20534.0], [17.2, 20542.0], [17.3, 20542.0], [17.4, 20556.0], [17.5, 20556.0], [17.6, 20567.0], [17.7, 20567.0], [17.8, 20582.0], [17.9, 20582.0], [18.0, 20692.0], [18.1, 20692.0], [18.2, 20733.0], [18.3, 20733.0], [18.4, 20741.0], [18.5, 20741.0], [18.6, 20752.0], [18.7, 20752.0], [18.8, 20765.0], [18.9, 20765.0], [19.0, 20770.0], [19.1, 20770.0], [19.2, 20774.0], [19.3, 20774.0], [19.4, 20787.0], [19.5, 20787.0], [19.6, 20878.0], [19.7, 20878.0], [19.8, 20883.0], [19.9, 20883.0], [20.0, 20897.0], [20.1, 20897.0], [20.2, 20902.0], [20.3, 20902.0], [20.4, 20910.0], [20.5, 20910.0], [20.6, 20917.0], [20.7, 20917.0], [20.8, 20929.0], [20.9, 20929.0], [21.0, 20950.0], [21.1, 20950.0], [21.2, 20968.0], [21.3, 20968.0], [21.4, 20970.0], [21.5, 20970.0], [21.6, 21041.0], [21.7, 21041.0], [21.8, 21097.0], [21.9, 21097.0], [22.0, 21104.0], [22.1, 21104.0], [22.2, 21116.0], [22.3, 21116.0], [22.4, 21123.0], [22.5, 21123.0], [22.6, 21141.0], [22.7, 21141.0], [22.8, 21143.0], [22.9, 21143.0], [23.0, 21167.0], [23.1, 21167.0], [23.2, 21173.0], [23.3, 21173.0], [23.4, 21174.0], [23.5, 21174.0], [23.6, 21176.0], [23.7, 21176.0], [23.8, 21190.0], [23.9, 21190.0], [24.0, 21195.0], [24.1, 21195.0], [24.2, 21215.0], [24.3, 21215.0], [24.4, 21220.0], [24.5, 21220.0], [24.6, 21276.0], [24.7, 21276.0], [24.8, 21303.0], [24.9, 21303.0], [25.0, 21320.0], [25.1, 21320.0], [25.2, 21321.0], [25.3, 21321.0], [25.4, 21321.0], [25.5, 21321.0], [25.6, 21331.0], [25.7, 21331.0], [25.8, 21331.0], [25.9, 21331.0], [26.0, 21334.0], [26.1, 21334.0], [26.2, 21340.0], [26.3, 21340.0], [26.4, 21343.0], [26.5, 21343.0], [26.6, 21344.0], [26.7, 21344.0], [26.8, 21350.0], [26.9, 21350.0], [27.0, 21350.0], [27.1, 21350.0], [27.2, 21353.0], [27.3, 21353.0], [27.4, 21355.0], [27.5, 21355.0], [27.6, 21358.0], [27.7, 21358.0], [27.8, 21362.0], [27.9, 21362.0], [28.0, 21367.0], [28.1, 21367.0], [28.2, 21372.0], [28.3, 21372.0], [28.4, 21382.0], [28.5, 21382.0], [28.6, 21385.0], [28.7, 21385.0], [28.8, 21392.0], [28.9, 21392.0], [29.0, 21393.0], [29.1, 21393.0], [29.2, 21402.0], [29.3, 21402.0], [29.4, 21410.0], [29.5, 21410.0], [29.6, 21413.0], [29.7, 21413.0], [29.8, 21420.0], [29.9, 21420.0], [30.0, 21431.0], [30.1, 21431.0], [30.2, 21434.0], [30.3, 21434.0], [30.4, 21437.0], [30.5, 21437.0], [30.6, 21438.0], [30.7, 21438.0], [30.8, 21438.0], [30.9, 21438.0], [31.0, 21449.0], [31.1, 21449.0], [31.2, 21453.0], [31.3, 21453.0], [31.4, 21461.0], [31.5, 21461.0], [31.6, 21467.0], [31.7, 21467.0], [31.8, 21480.0], [31.9, 21480.0], [32.0, 21505.0], [32.1, 21505.0], [32.2, 21512.0], [32.3, 21512.0], [32.4, 21515.0], [32.5, 21515.0], [32.6, 21515.0], [32.7, 21515.0], [32.8, 21516.0], [32.9, 21516.0], [33.0, 21520.0], [33.1, 21520.0], [33.2, 21535.0], [33.3, 21535.0], [33.4, 21564.0], [33.5, 21564.0], [33.6, 21593.0], [33.7, 21593.0], [33.8, 21598.0], [33.9, 21598.0], [34.0, 21604.0], [34.1, 21604.0], [34.2, 21604.0], [34.3, 21604.0], [34.4, 21615.0], [34.5, 21615.0], [34.6, 21615.0], [34.7, 21615.0], [34.8, 21639.0], [34.9, 21639.0], [35.0, 21646.0], [35.1, 21646.0], [35.2, 21652.0], [35.3, 21652.0], [35.4, 21665.0], [35.5, 21665.0], [35.6, 21675.0], [35.7, 21675.0], [35.8, 21682.0], [35.9, 21682.0], [36.0, 21684.0], [36.1, 21684.0], [36.2, 21686.0], [36.3, 21686.0], [36.4, 21686.0], [36.5, 21686.0], [36.6, 21687.0], [36.7, 21687.0], [36.8, 21690.0], [36.9, 21690.0], [37.0, 21705.0], [37.1, 21705.0], [37.2, 21764.0], [37.3, 21764.0], [37.4, 21766.0], [37.5, 21766.0], [37.6, 21769.0], [37.7, 21769.0], [37.8, 21780.0], [37.9, 21780.0], [38.0, 21804.0], [38.1, 21804.0], [38.2, 21817.0], [38.3, 21817.0], [38.4, 21827.0], [38.5, 21827.0], [38.6, 21828.0], [38.7, 21828.0], [38.8, 21865.0], [38.9, 21865.0], [39.0, 21867.0], [39.1, 21867.0], [39.2, 21870.0], [39.3, 21870.0], [39.4, 21897.0], [39.5, 21897.0], [39.6, 21906.0], [39.7, 21906.0], [39.8, 21906.0], [39.9, 21913.0], [40.0, 21913.0], [40.1, 21918.0], [40.2, 21918.0], [40.3, 21931.0], [40.4, 21931.0], [40.5, 21938.0], [40.6, 21938.0], [40.7, 21951.0], [40.8, 21951.0], [40.9, 21958.0], [41.0, 21958.0], [41.1, 21963.0], [41.2, 21963.0], [41.3, 21970.0], [41.4, 21970.0], [41.5, 21975.0], [41.6, 21975.0], [41.7, 21975.0], [41.8, 21975.0], [41.9, 21981.0], [42.0, 21981.0], [42.1, 21982.0], [42.2, 21982.0], [42.3, 21985.0], [42.4, 21985.0], [42.5, 21993.0], [42.6, 21993.0], [42.7, 21994.0], [42.8, 21994.0], [42.9, 21997.0], [43.0, 21997.0], [43.1, 21997.0], [43.2, 21997.0], [43.3, 22001.0], [43.4, 22001.0], [43.5, 22003.0], [43.6, 22003.0], [43.7, 22005.0], [43.8, 22005.0], [43.9, 22007.0], [44.0, 22007.0], [44.1, 22011.0], [44.2, 22011.0], [44.3, 22023.0], [44.4, 22023.0], [44.5, 22023.0], [44.6, 22023.0], [44.7, 22026.0], [44.8, 22026.0], [44.9, 22038.0], [45.0, 22038.0], [45.1, 22040.0], [45.2, 22040.0], [45.3, 22041.0], [45.4, 22041.0], [45.5, 22048.0], [45.6, 22048.0], [45.7, 22059.0], [45.8, 22059.0], [45.9, 22059.0], [46.0, 22059.0], [46.1, 22060.0], [46.2, 22060.0], [46.3, 22074.0], [46.4, 22074.0], [46.5, 22135.0], [46.6, 22135.0], [46.7, 22178.0], [46.8, 22178.0], [46.9, 22205.0], [47.0, 22205.0], [47.1, 22235.0], [47.2, 22235.0], [47.3, 22254.0], [47.4, 22254.0], [47.5, 22274.0], [47.6, 22274.0], [47.7, 22294.0], [47.8, 22294.0], [47.9, 22317.0], [48.0, 22317.0], [48.1, 22324.0], [48.2, 22324.0], [48.3, 22365.0], [48.4, 22365.0], [48.5, 22397.0], [48.6, 22397.0], [48.7, 22400.0], [48.8, 22400.0], [48.9, 22451.0], [49.0, 22451.0], [49.1, 22459.0], [49.2, 22459.0], [49.3, 22498.0], [49.4, 22498.0], [49.5, 22501.0], [49.6, 22501.0], [49.7, 22503.0], [49.8, 22503.0], [49.9, 22504.0], [50.0, 22504.0], [50.1, 22523.0], [50.2, 22523.0], [50.3, 22543.0], [50.4, 22543.0], [50.5, 22548.0], [50.6, 22548.0], [50.7, 22551.0], [50.8, 22551.0], [50.9, 22565.0], [51.0, 22565.0], [51.1, 22583.0], [51.2, 22583.0], [51.3, 22584.0], [51.4, 22584.0], [51.5, 22592.0], [51.6, 22592.0], [51.7, 22595.0], [51.8, 22595.0], [51.9, 22611.0], [52.0, 22611.0], [52.1, 22612.0], [52.2, 22612.0], [52.3, 22614.0], [52.4, 22614.0], [52.5, 22633.0], [52.6, 22633.0], [52.7, 22645.0], [52.8, 22645.0], [52.9, 22658.0], [53.0, 22658.0], [53.1, 22672.0], [53.2, 22672.0], [53.3, 22675.0], [53.4, 22675.0], [53.5, 22704.0], [53.6, 22704.0], [53.7, 22705.0], [53.8, 22705.0], [53.9, 22705.0], [54.0, 22705.0], [54.1, 22715.0], [54.2, 22715.0], [54.3, 22718.0], [54.4, 22718.0], [54.5, 22724.0], [54.6, 22724.0], [54.7, 22725.0], [54.8, 22725.0], [54.9, 22740.0], [55.0, 22740.0], [55.1, 22744.0], [55.2, 22744.0], [55.3, 22755.0], [55.4, 22755.0], [55.5, 22755.0], [55.6, 22755.0], [55.7, 22770.0], [55.8, 22770.0], [55.9, 22780.0], [56.0, 22780.0], [56.1, 22822.0], [56.2, 22822.0], [56.3, 22828.0], [56.4, 22828.0], [56.5, 22831.0], [56.6, 22831.0], [56.7, 22832.0], [56.8, 22832.0], [56.9, 22838.0], [57.0, 22838.0], [57.1, 22858.0], [57.2, 22858.0], [57.3, 22880.0], [57.4, 22880.0], [57.5, 22890.0], [57.6, 22890.0], [57.7, 22900.0], [57.8, 22900.0], [57.9, 22922.0], [58.0, 22922.0], [58.1, 22925.0], [58.2, 22925.0], [58.3, 22931.0], [58.4, 22931.0], [58.5, 22944.0], [58.6, 22944.0], [58.7, 22959.0], [58.8, 22959.0], [58.9, 22960.0], [59.0, 22960.0], [59.1, 22965.0], [59.2, 22965.0], [59.3, 23007.0], [59.4, 23007.0], [59.5, 23015.0], [59.6, 23015.0], [59.7, 23041.0], [59.8, 23041.0], [59.9, 23073.0], [60.0, 23073.0], [60.1, 23080.0], [60.2, 23080.0], [60.3, 23096.0], [60.4, 23096.0], [60.5, 23111.0], [60.6, 23111.0], [60.7, 23119.0], [60.8, 23119.0], [60.9, 23123.0], [61.0, 23123.0], [61.1, 23129.0], [61.2, 23129.0], [61.3, 23132.0], [61.4, 23132.0], [61.5, 23143.0], [61.6, 23143.0], [61.7, 23158.0], [61.8, 23158.0], [61.9, 23163.0], [62.0, 23163.0], [62.1, 23172.0], [62.2, 23172.0], [62.3, 23189.0], [62.4, 23189.0], [62.5, 23198.0], [62.6, 23198.0], [62.7, 23205.0], [62.8, 23205.0], [62.9, 23207.0], [63.0, 23207.0], [63.1, 23209.0], [63.2, 23209.0], [63.3, 23220.0], [63.4, 23220.0], [63.5, 23240.0], [63.6, 23240.0], [63.7, 23243.0], [63.8, 23243.0], [63.9, 23276.0], [64.0, 23276.0], [64.1, 23288.0], [64.2, 23288.0], [64.3, 23289.0], [64.4, 23289.0], [64.5, 23314.0], [64.6, 23314.0], [64.7, 23318.0], [64.8, 23318.0], [64.9, 23322.0], [65.0, 23322.0], [65.1, 23322.0], [65.2, 23322.0], [65.3, 23322.0], [65.4, 23322.0], [65.5, 23337.0], [65.6, 23337.0], [65.7, 23351.0], [65.8, 23351.0], [65.9, 23358.0], [66.0, 23358.0], [66.1, 23364.0], [66.2, 23364.0], [66.3, 23371.0], [66.4, 23371.0], [66.5, 23373.0], [66.6, 23373.0], [66.7, 23389.0], [66.8, 23389.0], [66.9, 23391.0], [67.0, 23391.0], [67.1, 23398.0], [67.2, 23398.0], [67.3, 23407.0], [67.4, 23407.0], [67.5, 23407.0], [67.6, 23407.0], [67.7, 23411.0], [67.8, 23411.0], [67.9, 23417.0], [68.0, 23417.0], [68.1, 23419.0], [68.2, 23419.0], [68.3, 23421.0], [68.4, 23421.0], [68.5, 23429.0], [68.6, 23429.0], [68.7, 23457.0], [68.8, 23457.0], [68.9, 23471.0], [69.0, 23471.0], [69.1, 23478.0], [69.2, 23478.0], [69.3, 23497.0], [69.4, 23497.0], [69.5, 23505.0], [69.6, 23505.0], [69.7, 23516.0], [69.8, 23516.0], [69.9, 23517.0], [70.0, 23517.0], [70.1, 23520.0], [70.2, 23520.0], [70.3, 23520.0], [70.4, 23520.0], [70.5, 23537.0], [70.6, 23537.0], [70.7, 23550.0], [70.8, 23550.0], [70.9, 23568.0], [71.0, 23568.0], [71.1, 23589.0], [71.2, 23589.0], [71.3, 23591.0], [71.4, 23591.0], [71.5, 23596.0], [71.6, 23596.0], [71.7, 23611.0], [71.8, 23611.0], [71.9, 23617.0], [72.0, 23617.0], [72.1, 23619.0], [72.2, 23619.0], [72.3, 23620.0], [72.4, 23620.0], [72.5, 23628.0], [72.6, 23628.0], [72.7, 23641.0], [72.8, 23641.0], [72.9, 23760.0], [73.0, 23760.0], [73.1, 23773.0], [73.2, 23773.0], [73.3, 23795.0], [73.4, 23795.0], [73.5, 23802.0], [73.6, 23802.0], [73.7, 23817.0], [73.8, 23817.0], [73.9, 23825.0], [74.0, 23825.0], [74.1, 23826.0], [74.2, 23826.0], [74.3, 23830.0], [74.4, 23830.0], [74.5, 23842.0], [74.6, 23842.0], [74.7, 23867.0], [74.8, 23867.0], [74.9, 23871.0], [75.0, 23871.0], [75.1, 23877.0], [75.2, 23877.0], [75.3, 23884.0], [75.4, 23884.0], [75.5, 23900.0], [75.6, 23900.0], [75.7, 23904.0], [75.8, 23904.0], [75.9, 23905.0], [76.0, 23905.0], [76.1, 23948.0], [76.2, 23948.0], [76.3, 23956.0], [76.4, 23956.0], [76.5, 23970.0], [76.6, 23970.0], [76.7, 23989.0], [76.8, 23989.0], [76.9, 24002.0], [77.0, 24002.0], [77.1, 24008.0], [77.2, 24008.0], [77.3, 24012.0], [77.4, 24012.0], [77.5, 24019.0], [77.6, 24019.0], [77.7, 24031.0], [77.8, 24031.0], [77.9, 24033.0], [78.0, 24033.0], [78.1, 24038.0], [78.2, 24038.0], [78.3, 24047.0], [78.4, 24047.0], [78.5, 24050.0], [78.6, 24050.0], [78.7, 24067.0], [78.8, 24067.0], [78.9, 24080.0], [79.0, 24080.0], [79.1, 24081.0], [79.2, 24081.0], [79.3, 24089.0], [79.4, 24089.0], [79.5, 24095.0], [79.6, 24095.0], [79.7, 24100.0], [79.8, 24100.0], [79.9, 24103.0], [80.0, 24103.0], [80.1, 24105.0], [80.2, 24105.0], [80.3, 24106.0], [80.4, 24106.0], [80.5, 24123.0], [80.6, 24123.0], [80.7, 24133.0], [80.8, 24133.0], [80.9, 24209.0], [81.0, 24209.0], [81.1, 24210.0], [81.2, 24210.0], [81.3, 24214.0], [81.4, 24214.0], [81.5, 24218.0], [81.6, 24218.0], [81.7, 24218.0], [81.8, 24218.0], [81.9, 24218.0], [82.0, 24218.0], [82.1, 24219.0], [82.2, 24219.0], [82.3, 24219.0], [82.4, 24219.0], [82.5, 24220.0], [82.6, 24220.0], [82.7, 24221.0], [82.8, 24221.0], [82.9, 24224.0], [83.0, 24224.0], [83.1, 24229.0], [83.2, 24229.0], [83.3, 24230.0], [83.4, 24230.0], [83.5, 24230.0], [83.6, 24230.0], [83.7, 24239.0], [83.8, 24239.0], [83.9, 24251.0], [84.0, 24251.0], [84.1, 24253.0], [84.2, 24253.0], [84.3, 24259.0], [84.4, 24259.0], [84.5, 24264.0], [84.6, 24264.0], [84.7, 24272.0], [84.8, 24272.0], [84.9, 24273.0], [85.0, 24273.0], [85.1, 24274.0], [85.2, 24274.0], [85.3, 24284.0], [85.4, 24284.0], [85.5, 24287.0], [85.6, 24287.0], [85.7, 24299.0], [85.8, 24299.0], [85.9, 24303.0], [86.0, 24303.0], [86.1, 24304.0], [86.2, 24304.0], [86.3, 24305.0], [86.4, 24305.0], [86.5, 24318.0], [86.6, 24318.0], [86.7, 24321.0], [86.8, 24321.0], [86.9, 24332.0], [87.0, 24332.0], [87.1, 24334.0], [87.2, 24334.0], [87.3, 24342.0], [87.4, 24342.0], [87.5, 24348.0], [87.6, 24348.0], [87.7, 24349.0], [87.8, 24349.0], [87.9, 24394.0], [88.0, 24394.0], [88.1, 24400.0], [88.2, 24400.0], [88.3, 24415.0], [88.4, 24415.0], [88.5, 24442.0], [88.6, 24442.0], [88.7, 24449.0], [88.8, 24449.0], [88.9, 24456.0], [89.0, 24456.0], [89.1, 24457.0], [89.2, 24457.0], [89.3, 24502.0], [89.4, 24502.0], [89.5, 24503.0], [89.6, 24503.0], [89.7, 24521.0], [89.8, 24521.0], [89.9, 24532.0], [90.0, 24532.0], [90.1, 24537.0], [90.2, 24537.0], [90.3, 24551.0], [90.4, 24551.0], [90.5, 24553.0], [90.6, 24553.0], [90.7, 24557.0], [90.8, 24557.0], [90.9, 24563.0], [91.0, 24563.0], [91.1, 24568.0], [91.2, 24568.0], [91.3, 24580.0], [91.4, 24580.0], [91.5, 24584.0], [91.6, 24584.0], [91.7, 24592.0], [91.8, 24592.0], [91.9, 24612.0], [92.0, 24612.0], [92.1, 24632.0], [92.2, 24632.0], [92.3, 24638.0], [92.4, 24638.0], [92.5, 24650.0], [92.6, 24650.0], [92.7, 24654.0], [92.8, 24654.0], [92.9, 24685.0], [93.0, 24685.0], [93.1, 24695.0], [93.2, 24695.0], [93.3, 24702.0], [93.4, 24702.0], [93.5, 24709.0], [93.6, 24709.0], [93.7, 24716.0], [93.8, 24716.0], [93.9, 24721.0], [94.0, 24721.0], [94.1, 24723.0], [94.2, 24723.0], [94.3, 24724.0], [94.4, 24724.0], [94.5, 24729.0], [94.6, 24729.0], [94.7, 24742.0], [94.8, 24742.0], [94.9, 24757.0], [95.0, 24757.0], [95.1, 24765.0], [95.2, 24765.0], [95.3, 24765.0], [95.4, 24765.0], [95.5, 24778.0], [95.6, 24778.0], [95.7, 24789.0], [95.8, 24789.0], [95.9, 24791.0], [96.0, 24791.0], [96.1, 24793.0], [96.2, 24793.0], [96.3, 24802.0], [96.4, 24802.0], [96.5, 24808.0], [96.6, 24808.0], [96.7, 24821.0], [96.8, 24821.0], [96.9, 24822.0], [97.0, 24822.0], [97.1, 24828.0], [97.2, 24828.0], [97.3, 24834.0], [97.4, 24834.0], [97.5, 24868.0], [97.6, 24868.0], [97.7, 24879.0], [97.8, 24879.0], [97.9, 24885.0], [98.0, 24885.0], [98.1, 24888.0], [98.2, 24888.0], [98.3, 24891.0], [98.4, 24891.0], [98.5, 24897.0], [98.6, 24897.0], [98.7, 24902.0], [98.8, 24902.0], [98.9, 24903.0], [99.0, 24903.0], [99.1, 24911.0], [99.2, 24911.0], [99.3, 24916.0], [99.4, 24916.0], [99.5, 24929.0], [99.6, 24929.0], [99.7, 24929.0], [99.8, 24929.0], [99.9, 24949.0], [100.0, 24949.0]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 5.0], [39.5, 5.0], [39.6, 5.0], [39.7, 5.0], [39.8, 5.0], [39.9, 5.0], [40.0, 5.0], [40.1, 5.0], [40.2, 5.0], [40.3, 5.0], [40.4, 5.0], [40.5, 5.0], [40.6, 5.0], [40.7, 5.0], [40.8, 5.0], [40.9, 5.0], [41.0, 5.0], [41.1, 5.0], [41.2, 5.0], [41.3, 5.0], [41.4, 5.0], [41.5, 5.0], [41.6, 5.0], [41.7, 5.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 6.0], [50.7, 6.0], [50.8, 6.0], [50.9, 6.0], [51.0, 6.0], [51.1, 6.0], [51.2, 6.0], [51.3, 6.0], [51.4, 6.0], [51.5, 6.0], [51.6, 6.0], [51.7, 6.0], [51.8, 6.0], [51.9, 6.0], [52.0, 6.0], [52.1, 6.0], [52.2, 6.0], [52.3, 6.0], [52.4, 6.0], [52.5, 6.0], [52.6, 6.0], [52.7, 6.0], [52.8, 6.0], [52.9, 6.0], [53.0, 6.0], [53.1, 6.0], [53.2, 6.0], [53.3, 6.0], [53.4, 6.0], [53.5, 6.0], [53.6, 6.0], [53.7, 6.0], [53.8, 6.0], [53.9, 6.0], [54.0, 6.0], [54.1, 6.0], [54.2, 6.0], [54.3, 6.0], [54.4, 6.0], [54.5, 6.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 7.0], [60.3, 7.0], [60.4, 7.0], [60.5, 7.0], [60.6, 7.0], [60.7, 7.0], [60.8, 7.0], [60.9, 7.0], [61.0, 7.0], [61.1, 7.0], [61.2, 7.0], [61.3, 7.0], [61.4, 7.0], [61.5, 7.0], [61.6, 7.0], [61.7, 7.0], [61.8, 7.0], [61.9, 7.0], [62.0, 7.0], [62.1, 7.0], [62.2, 7.0], [62.3, 7.0], [62.4, 7.0], [62.5, 7.0], [62.6, 7.0], [62.7, 7.0], [62.8, 7.0], [62.9, 7.0], [63.0, 7.0], [63.1, 7.0], [63.2, 7.0], [63.3, 7.0], [63.4, 7.0], [63.5, 7.0], [63.6, 7.0], [63.7, 7.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 8.0], [68.3, 8.0], [68.4, 8.0], [68.5, 8.0], [68.6, 8.0], [68.7, 8.0], [68.8, 8.0], [68.9, 8.0], [69.0, 8.0], [69.1, 8.0], [69.2, 8.0], [69.3, 8.0], [69.4, 8.0], [69.5, 8.0], [69.6, 8.0], [69.7, 8.0], [69.8, 8.0], [69.9, 8.0], [70.0, 8.0], [70.1, 8.0], [70.2, 8.0], [70.3, 8.0], [70.4, 8.0], [70.5, 8.0], [70.6, 8.0], [70.7, 8.0], [70.8, 8.0], [70.9, 8.0], [71.0, 8.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 9.0], [74.5, 9.0], [74.6, 9.0], [74.7, 9.0], [74.8, 9.0], [74.9, 9.0], [75.0, 9.0], [75.1, 9.0], [75.2, 9.0], [75.3, 9.0], [75.4, 9.0], [75.5, 9.0], [75.6, 9.0], [75.7, 9.0], [75.8, 9.0], [75.9, 9.0], [76.0, 9.0], [76.1, 9.0], [76.2, 9.0], [76.3, 9.0], [76.4, 9.0], [76.5, 9.0], [76.6, 10.0], [76.7, 10.0], [76.8, 10.0], [76.9, 10.0], [77.0, 10.0], [77.1, 10.0], [77.2, 10.0], [77.3, 10.0], [77.4, 10.0], [77.5, 10.0], [77.6, 10.0], [77.7, 10.0], [77.8, 10.0], [77.9, 10.0], [78.0, 10.0], [78.1, 10.0], [78.2, 10.0], [78.3, 10.0], [78.4, 10.0], [78.5, 10.0], [78.6, 10.0], [78.7, 10.0], [78.8, 10.0], [78.9, 10.0], [79.0, 10.0], [79.1, 10.0], [79.2, 11.0], [79.3, 11.0], [79.4, 11.0], [79.5, 11.0], [79.6, 11.0], [79.7, 11.0], [79.8, 11.0], [79.9, 11.0], [80.0, 11.0], [80.1, 11.0], [80.2, 11.0], [80.3, 11.0], [80.4, 11.0], [80.5, 11.0], [80.6, 11.0], [80.7, 11.0], [80.8, 11.0], [80.9, 11.0], [81.0, 11.0], [81.1, 11.0], [81.2, 11.0], [81.3, 11.0], [81.4, 11.0], [81.5, 11.0], [81.6, 11.0], [81.7, 11.0], [81.8, 11.0], [81.9, 11.0], [82.0, 12.0], [82.1, 12.0], [82.2, 12.0], [82.3, 12.0], [82.4, 12.0], [82.5, 12.0], [82.6, 12.0], [82.7, 12.0], [82.8, 12.0], [82.9, 12.0], [83.0, 12.0], [83.1, 12.0], [83.2, 12.0], [83.3, 12.0], [83.4, 12.0], [83.5, 12.0], [83.6, 13.0], [83.7, 13.0], [83.8, 13.0], [83.9, 13.0], [84.0, 13.0], [84.1, 13.0], [84.2, 13.0], [84.3, 13.0], [84.4, 13.0], [84.5, 13.0], [84.6, 13.0], [84.7, 13.0], [84.8, 13.0], [84.9, 13.0], [85.0, 13.0], [85.1, 13.0], [85.2, 13.0], [85.3, 13.0], [85.4, 13.0], [85.5, 13.0], [85.6, 13.0], [85.7, 13.0], [85.8, 13.0], [85.9, 13.0], [86.0, 13.0], [86.1, 13.0], [86.2, 13.0], [86.3, 13.0], [86.4, 13.0], [86.5, 13.0], [86.6, 14.0], [86.7, 14.0], [86.8, 14.0], [86.9, 14.0], [87.0, 14.0], [87.1, 14.0], [87.2, 14.0], [87.3, 14.0], [87.4, 14.0], [87.5, 14.0], [87.6, 14.0], [87.7, 14.0], [87.8, 14.0], [87.9, 14.0], [88.0, 14.0], [88.1, 14.0], [88.2, 14.0], [88.3, 14.0], [88.4, 14.0], [88.5, 14.0], [88.6, 15.0], [88.7, 15.0], [88.8, 15.0], [88.9, 15.0], [89.0, 15.0], [89.1, 15.0], [89.2, 15.0], [89.3, 15.0], [89.4, 15.0], [89.5, 15.0], [89.6, 15.0], [89.7, 15.0], [89.8, 16.0], [89.9, 16.0], [90.0, 16.0], [90.1, 16.0], [90.2, 16.0], [90.3, 16.0], [90.4, 16.0], [90.5, 16.0], [90.6, 17.0], [90.7, 17.0], [90.8, 17.0], [90.9, 17.0], [91.0, 18.0], [91.1, 18.0], [91.2, 18.0], [91.3, 18.0], [91.4, 18.0], [91.5, 18.0], [91.6, 18.0], [91.7, 18.0], [91.8, 19.0], [91.9, 19.0], [92.0, 19.0], [92.1, 19.0], [92.2, 19.0], [92.3, 19.0], [92.4, 19.0], [92.5, 19.0], [92.6, 19.0], [92.7, 19.0], [92.8, 19.0], [92.9, 19.0], [93.0, 20.0], [93.1, 20.0], [93.2, 21.0], [93.3, 21.0], [93.4, 22.0], [93.5, 22.0], [93.6, 22.0], [93.7, 22.0], [93.8, 23.0], [93.9, 23.0], [94.0, 23.0], [94.1, 23.0], [94.2, 23.0], [94.3, 23.0], [94.4, 24.0], [94.5, 24.0], [94.6, 25.0], [94.7, 25.0], [94.8, 26.0], [94.9, 26.0], [95.0, 27.0], [95.1, 27.0], [95.2, 28.0], [95.3, 28.0], [95.4, 29.0], [95.5, 29.0], [95.6, 29.0], [95.7, 29.0], [95.8, 29.0], [95.9, 29.0], [96.0, 29.0], [96.1, 29.0], [96.2, 29.0], [96.3, 29.0], [96.4, 29.0], [96.5, 29.0], [96.6, 29.0], [96.7, 30.0], [96.8, 30.0], [96.9, 30.0], [97.0, 30.0], [97.1, 30.0], [97.2, 31.0], [97.3, 31.0], [97.4, 31.0], [97.5, 31.0], [97.6, 31.0], [97.7, 32.0], [97.8, 32.0], [97.9, 34.0], [98.0, 34.0], [98.1, 35.0], [98.2, 35.0], [98.3, 36.0], [98.4, 36.0], [98.5, 41.0], [98.6, 41.0], [98.7, 42.0], [98.8, 42.0], [98.9, 48.0], [99.0, 48.0], [99.1, 50.0], [99.2, 50.0], [99.3, 52.0], [99.4, 52.0], [99.5, 60.0], [99.6, 60.0], [99.7, 71.0], [99.8, 71.0], [99.9, 90.0], [100.0, 90.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 3.0], [0.5, 3.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 4.0], [6.1, 4.0], [6.2, 4.0], [6.3, 4.0], [6.4, 4.0], [6.5, 4.0], [6.6, 4.0], [6.7, 4.0], [6.8, 4.0], [6.9, 4.0], [7.0, 4.0], [7.1, 4.0], [7.2, 4.0], [7.3, 4.0], [7.4, 4.0], [7.5, 4.0], [7.6, 4.0], [7.7, 4.0], [7.8, 4.0], [7.9, 4.0], [8.0, 4.0], [8.1, 4.0], [8.2, 4.0], [8.3, 4.0], [8.4, 4.0], [8.5, 4.0], [8.6, 4.0], [8.7, 4.0], [8.8, 4.0], [8.9, 4.0], [9.0, 4.0], [9.1, 4.0], [9.2, 4.0], [9.3, 4.0], [9.4, 4.0], [9.5, 4.0], [9.6, 4.0], [9.7, 4.0], [9.8, 4.0], [9.9, 4.0], [10.0, 4.0], [10.1, 4.0], [10.2, 4.0], [10.3, 4.0], [10.4, 4.0], [10.5, 4.0], [10.6, 4.0], [10.7, 4.0], [10.8, 4.0], [10.9, 4.0], [11.0, 4.0], [11.1, 4.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 4.0], [19.3, 4.0], [19.4, 4.0], [19.5, 4.0], [19.6, 4.0], [19.7, 4.0], [19.8, 4.0], [19.9, 4.0], [20.0, 4.0], [20.1, 4.0], [20.2, 4.0], [20.3, 4.0], [20.4, 4.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 5.0], [26.9, 5.0], [27.0, 5.0], [27.1, 5.0], [27.2, 5.0], [27.3, 5.0], [27.4, 5.0], [27.5, 5.0], [27.6, 5.0], [27.7, 5.0], [27.8, 5.0], [27.9, 5.0], [28.0, 5.0], [28.1, 5.0], [28.2, 5.0], [28.3, 5.0], [28.4, 5.0], [28.5, 5.0], [28.6, 5.0], [28.7, 5.0], [28.8, 5.0], [28.9, 5.0], [29.0, 5.0], [29.1, 5.0], [29.2, 5.0], [29.3, 5.0], [29.4, 5.0], [29.5, 5.0], [29.6, 5.0], [29.7, 5.0], [29.8, 5.0], [29.9, 5.0], [30.0, 5.0], [30.1, 5.0], [30.2, 5.0], [30.3, 5.0], [30.4, 5.0], [30.5, 5.0], [30.6, 5.0], [30.7, 5.0], [30.8, 5.0], [30.9, 5.0], [31.0, 5.0], [31.1, 5.0], [31.2, 5.0], [31.3, 5.0], [31.4, 5.0], [31.5, 5.0], [31.6, 5.0], [31.7, 5.0], [31.8, 5.0], [31.9, 5.0], [32.0, 5.0], [32.1, 5.0], [32.2, 5.0], [32.3, 5.0], [32.4, 5.0], [32.5, 5.0], [32.6, 5.0], [32.7, 5.0], [32.8, 5.0], [32.9, 5.0], [33.0, 5.0], [33.1, 5.0], [33.2, 5.0], [33.3, 5.0], [33.4, 5.0], [33.5, 5.0], [33.6, 5.0], [33.7, 5.0], [33.8, 5.0], [33.9, 5.0], [34.0, 5.0], [34.1, 5.0], [34.2, 5.0], [34.3, 5.0], [34.4, 5.0], [34.5, 5.0], [34.6, 5.0], [34.7, 5.0], [34.8, 5.0], [34.9, 5.0], [35.0, 5.0], [35.1, 5.0], [35.2, 5.0], [35.3, 5.0], [35.4, 5.0], [35.5, 5.0], [35.6, 5.0], [35.7, 5.0], [35.8, 5.0], [35.9, 5.0], [36.0, 5.0], [36.1, 5.0], [36.2, 5.0], [36.3, 5.0], [36.4, 5.0], [36.5, 5.0], [36.6, 5.0], [36.7, 5.0], [36.8, 5.0], [36.9, 5.0], [37.0, 5.0], [37.1, 5.0], [37.2, 5.0], [37.3, 5.0], [37.4, 5.0], [37.5, 5.0], [37.6, 5.0], [37.7, 5.0], [37.8, 5.0], [37.9, 5.0], [38.0, 5.0], [38.1, 5.0], [38.2, 5.0], [38.3, 5.0], [38.4, 5.0], [38.5, 5.0], [38.6, 5.0], [38.7, 5.0], [38.8, 5.0], [38.9, 5.0], [39.0, 5.0], [39.1, 5.0], [39.2, 5.0], [39.3, 5.0], [39.4, 6.0], [39.5, 6.0], [39.6, 6.0], [39.7, 6.0], [39.8, 6.0], [39.9, 6.0], [40.0, 6.0], [40.1, 6.0], [40.2, 6.0], [40.3, 6.0], [40.4, 6.0], [40.5, 6.0], [40.6, 6.0], [40.7, 6.0], [40.8, 6.0], [40.9, 6.0], [41.0, 6.0], [41.1, 6.0], [41.2, 6.0], [41.3, 6.0], [41.4, 6.0], [41.5, 6.0], [41.6, 6.0], [41.7, 6.0], [41.8, 6.0], [41.9, 6.0], [42.0, 6.0], [42.1, 6.0], [42.2, 6.0], [42.3, 6.0], [42.4, 6.0], [42.5, 6.0], [42.6, 6.0], [42.7, 6.0], [42.8, 6.0], [42.9, 6.0], [43.0, 6.0], [43.1, 6.0], [43.2, 6.0], [43.3, 6.0], [43.4, 6.0], [43.5, 6.0], [43.6, 6.0], [43.7, 6.0], [43.8, 6.0], [43.9, 6.0], [44.0, 6.0], [44.1, 6.0], [44.2, 6.0], [44.3, 6.0], [44.4, 6.0], [44.5, 6.0], [44.6, 6.0], [44.7, 6.0], [44.8, 6.0], [44.9, 6.0], [45.0, 6.0], [45.1, 6.0], [45.2, 6.0], [45.3, 6.0], [45.4, 6.0], [45.5, 6.0], [45.6, 6.0], [45.7, 6.0], [45.8, 7.0], [45.9, 7.0], [46.0, 7.0], [46.1, 7.0], [46.2, 7.0], [46.3, 7.0], [46.4, 7.0], [46.5, 7.0], [46.6, 7.0], [46.7, 7.0], [46.8, 7.0], [46.9, 7.0], [47.0, 7.0], [47.1, 7.0], [47.2, 7.0], [47.3, 7.0], [47.4, 7.0], [47.5, 7.0], [47.6, 7.0], [47.7, 7.0], [47.8, 7.0], [47.9, 7.0], [48.0, 7.0], [48.1, 7.0], [48.2, 7.0], [48.3, 7.0], [48.4, 7.0], [48.5, 7.0], [48.6, 7.0], [48.7, 7.0], [48.8, 7.0], [48.9, 7.0], [49.0, 7.0], [49.1, 7.0], [49.2, 7.0], [49.3, 7.0], [49.4, 7.0], [49.5, 7.0], [49.6, 7.0], [49.7, 7.0], [49.8, 7.0], [49.9, 7.0], [50.0, 7.0], [50.1, 7.0], [50.2, 7.0], [50.3, 7.0], [50.4, 7.0], [50.5, 7.0], [50.6, 7.0], [50.7, 7.0], [50.8, 7.0], [50.9, 7.0], [51.0, 8.0], [51.1, 8.0], [51.2, 8.0], [51.3, 8.0], [51.4, 8.0], [51.5, 8.0], [51.6, 8.0], [51.7, 8.0], [51.8, 8.0], [51.9, 8.0], [52.0, 8.0], [52.1, 8.0], [52.2, 8.0], [52.3, 8.0], [52.4, 8.0], [52.5, 8.0], [52.6, 8.0], [52.7, 8.0], [52.8, 8.0], [52.9, 8.0], [53.0, 8.0], [53.1, 8.0], [53.2, 8.0], [53.3, 8.0], [53.4, 8.0], [53.5, 8.0], [53.6, 8.0], [53.7, 8.0], [53.8, 8.0], [53.9, 8.0], [54.0, 8.0], [54.1, 8.0], [54.2, 8.0], [54.3, 8.0], [54.4, 8.0], [54.5, 8.0], [54.6, 9.0], [54.7, 9.0], [54.8, 9.0], [54.9, 9.0], [55.0, 9.0], [55.1, 9.0], [55.2, 9.0], [55.3, 9.0], [55.4, 9.0], [55.5, 9.0], [55.6, 9.0], [55.7, 9.0], [55.8, 9.0], [55.9, 9.0], [56.0, 9.0], [56.1, 9.0], [56.2, 9.0], [56.3, 9.0], [56.4, 9.0], [56.5, 9.0], [56.6, 9.0], [56.7, 9.0], [56.8, 9.0], [56.9, 9.0], [57.0, 9.0], [57.1, 9.0], [57.2, 10.0], [57.3, 10.0], [57.4, 10.0], [57.5, 10.0], [57.6, 10.0], [57.7, 10.0], [57.8, 10.0], [57.9, 10.0], [58.0, 10.0], [58.1, 10.0], [58.2, 10.0], [58.3, 10.0], [58.4, 10.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 12.0], [59.2, 12.0], [59.3, 12.0], [59.4, 12.0], [59.5, 12.0], [59.6, 12.0], [59.7, 12.0], [59.8, 12.0], [59.9, 12.0], [60.0, 12.0], [60.1, 12.0], [60.2, 12.0], [60.3, 12.0], [60.4, 12.0], [60.5, 13.0], [60.6, 13.0], [60.7, 13.0], [60.8, 13.0], [60.9, 13.0], [61.0, 13.0], [61.1, 13.0], [61.2, 13.0], [61.3, 13.0], [61.4, 13.0], [61.5, 13.0], [61.6, 13.0], [61.7, 14.0], [61.8, 14.0], [61.9, 14.0], [62.0, 14.0], [62.1, 14.0], [62.2, 14.0], [62.3, 14.0], [62.4, 14.0], [62.5, 14.0], [62.6, 14.0], [62.7, 14.0], [62.8, 14.0], [62.9, 14.0], [63.0, 14.0], [63.1, 15.0], [63.2, 15.0], [63.3, 15.0], [63.4, 15.0], [63.5, 15.0], [63.6, 15.0], [63.7, 15.0], [63.8, 15.0], [63.9, 15.0], [64.0, 17.0], [64.1, 17.0], [64.2, 17.0], [64.3, 17.0], [64.4, 17.0], [64.5, 17.0], [64.6, 17.0], [64.7, 17.0], [64.8, 18.0], [64.9, 18.0], [65.0, 18.0], [65.1, 18.0], [65.2, 18.0], [65.3, 18.0], [65.4, 18.0], [65.5, 18.0], [65.6, 18.0], [65.7, 18.0], [65.8, 19.0], [65.9, 19.0], [66.0, 19.0], [66.1, 19.0], [66.2, 20.0], [66.3, 20.0], [66.4, 20.0], [66.5, 20.0], [66.6, 20.0], [66.7, 20.0], [66.8, 20.0], [66.9, 20.0], [67.0, 20.0], [67.1, 20.0], [67.2, 21.0], [67.3, 21.0], [67.4, 21.0], [67.5, 21.0], [67.6, 21.0], [67.7, 21.0], [67.8, 22.0], [67.9, 22.0], [68.0, 23.0], [68.1, 23.0], [68.2, 23.0], [68.3, 23.0], [68.4, 23.0], [68.5, 23.0], [68.6, 23.0], [68.7, 23.0], [68.8, 23.0], [68.9, 23.0], [69.0, 23.0], [69.1, 23.0], [69.2, 24.0], [69.3, 24.0], [69.4, 24.0], [69.5, 24.0], [69.6, 24.0], [69.7, 25.0], [69.8, 25.0], [69.9, 26.0], [70.0, 26.0], [70.1, 26.0], [70.2, 26.0], [70.3, 26.0], [70.4, 26.0], [70.5, 26.0], [70.6, 26.0], [70.7, 27.0], [70.8, 27.0], [70.9, 28.0], [71.0, 28.0], [71.1, 28.0], [71.2, 28.0], [71.3, 28.0], [71.4, 28.0], [71.5, 28.0], [71.6, 28.0], [71.7, 28.0], [71.8, 28.0], [71.9, 29.0], [72.0, 29.0], [72.1, 29.0], [72.2, 29.0], [72.3, 30.0], [72.4, 30.0], [72.5, 30.0], [72.6, 30.0], [72.7, 31.0], [72.8, 31.0], [72.9, 31.0], [73.0, 31.0], [73.1, 31.0], [73.2, 31.0], [73.3, 31.0], [73.4, 31.0], [73.5, 32.0], [73.6, 32.0], [73.7, 32.0], [73.8, 32.0], [73.9, 33.0], [74.0, 33.0], [74.1, 34.0], [74.2, 34.0], [74.3, 34.0], [74.4, 34.0], [74.5, 34.0], [74.6, 34.0], [74.7, 35.0], [74.8, 35.0], [74.9, 35.0], [75.0, 35.0], [75.1, 36.0], [75.2, 36.0], [75.3, 37.0], [75.4, 37.0], [75.5, 37.0], [75.6, 37.0], [75.7, 37.0], [75.8, 37.0], [75.9, 38.0], [76.0, 38.0], [76.1, 38.0], [76.2, 38.0], [76.3, 38.0], [76.4, 38.0], [76.5, 38.0], [76.6, 38.0], [76.7, 38.0], [76.8, 38.0], [76.9, 38.0], [77.0, 38.0], [77.1, 40.0], [77.2, 40.0], [77.3, 40.0], [77.4, 40.0], [77.5, 41.0], [77.6, 41.0], [77.7, 46.0], [77.8, 46.0], [77.9, 47.0], [78.0, 47.0], [78.1, 49.0], [78.2, 49.0], [78.3, 53.0], [78.4, 53.0], [78.5, 61.0], [78.6, 61.0], [78.7, 63.0], [78.8, 63.0], [78.9, 64.0], [79.0, 64.0], [79.1, 65.0], [79.2, 65.0], [79.3, 66.0], [79.4, 66.0], [79.5, 67.0], [79.6, 67.0], [79.7, 67.0], [79.8, 67.0], [79.9, 69.0], [80.0, 69.0], [80.1, 69.0], [80.2, 69.0], [80.3, 69.0], [80.4, 69.0], [80.5, 72.0], [80.6, 72.0], [80.7, 75.0], [80.8, 75.0], [80.9, 75.0], [81.0, 75.0], [81.1, 79.0], [81.2, 79.0], [81.3, 79.0], [81.4, 79.0], [81.5, 80.0], [81.6, 80.0], [81.7, 83.0], [81.8, 83.0], [81.9, 84.0], [82.0, 84.0], [82.1, 84.0], [82.2, 84.0], [82.3, 87.0], [82.4, 87.0], [82.5, 87.0], [82.6, 87.0], [82.7, 90.0], [82.8, 90.0], [82.9, 92.0], [83.0, 92.0], [83.1, 94.0], [83.2, 94.0], [83.3, 98.0], [83.4, 98.0], [83.5, 101.0], [83.6, 101.0], [83.7, 101.0], [83.8, 101.0], [83.9, 101.0], [84.0, 101.0], [84.1, 103.0], [84.2, 103.0], [84.3, 104.0], [84.4, 104.0], [84.5, 107.0], [84.6, 107.0], [84.7, 108.0], [84.8, 108.0], [84.9, 111.0], [85.0, 111.0], [85.1, 113.0], [85.2, 113.0], [85.3, 114.0], [85.4, 114.0], [85.5, 116.0], [85.6, 116.0], [85.7, 117.0], [85.8, 117.0], [85.9, 119.0], [86.0, 119.0], [86.1, 121.0], [86.2, 121.0], [86.3, 123.0], [86.4, 123.0], [86.5, 123.0], [86.6, 123.0], [86.7, 124.0], [86.8, 124.0], [86.9, 125.0], [87.0, 125.0], [87.1, 126.0], [87.2, 126.0], [87.3, 128.0], [87.4, 128.0], [87.5, 129.0], [87.6, 129.0], [87.7, 131.0], [87.8, 131.0], [87.9, 132.0], [88.0, 132.0], [88.1, 132.0], [88.2, 132.0], [88.3, 134.0], [88.4, 134.0], [88.5, 134.0], [88.6, 134.0], [88.7, 134.0], [88.8, 134.0], [88.9, 136.0], [89.0, 136.0], [89.1, 137.0], [89.2, 137.0], [89.3, 140.0], [89.4, 140.0], [89.5, 142.0], [89.6, 142.0], [89.7, 142.0], [89.8, 142.0], [89.9, 142.0], [90.0, 142.0], [90.1, 142.0], [90.2, 142.0], [90.3, 142.0], [90.4, 142.0], [90.5, 142.0], [90.6, 142.0], [90.7, 142.0], [90.8, 142.0], [90.9, 143.0], [91.0, 143.0], [91.1, 143.0], [91.2, 143.0], [91.3, 143.0], [91.4, 143.0], [91.5, 144.0], [91.6, 144.0], [91.7, 145.0], [91.8, 145.0], [91.9, 145.0], [92.0, 145.0], [92.1, 146.0], [92.2, 146.0], [92.3, 146.0], [92.4, 146.0], [92.5, 147.0], [92.6, 147.0], [92.7, 147.0], [92.8, 147.0], [92.9, 147.0], [93.0, 147.0], [93.1, 149.0], [93.2, 149.0], [93.3, 153.0], [93.4, 153.0], [93.5, 153.0], [93.6, 153.0], [93.7, 155.0], [93.8, 155.0], [93.9, 156.0], [94.0, 156.0], [94.1, 157.0], [94.2, 157.0], [94.3, 157.0], [94.4, 157.0], [94.5, 158.0], [94.6, 158.0], [94.7, 158.0], [94.8, 158.0], [94.9, 159.0], [95.0, 159.0], [95.1, 160.0], [95.2, 160.0], [95.3, 160.0], [95.4, 160.0], [95.5, 161.0], [95.6, 161.0], [95.7, 162.0], [95.8, 162.0], [95.9, 162.0], [96.0, 162.0], [96.1, 162.0], [96.2, 162.0], [96.3, 162.0], [96.4, 162.0], [96.5, 164.0], [96.6, 164.0], [96.7, 164.0], [96.8, 164.0], [96.9, 164.0], [97.0, 164.0], [97.1, 172.0], [97.2, 172.0], [97.3, 173.0], [97.4, 173.0], [97.5, 175.0], [97.6, 175.0], [97.7, 176.0], [97.8, 176.0], [97.9, 180.0], [98.0, 180.0], [98.1, 186.0], [98.2, 186.0], [98.3, 188.0], [98.4, 188.0], [98.5, 190.0], [98.6, 190.0], [98.7, 192.0], [98.8, 192.0], [98.9, 192.0], [99.0, 192.0], [99.1, 193.0], [99.2, 193.0], [99.3, 194.0], [99.4, 194.0], [99.5, 197.0], [99.6, 197.0], [99.7, 200.0], [99.8, 200.0], [99.9, 207.0], [100.0, 207.0]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 3.0], [0.7, 3.0], [0.8, 3.0], [0.9, 3.0], [1.0, 3.0], [1.1, 3.0], [1.2, 3.0], [1.3, 3.0], [1.4, 3.0], [1.5, 3.0], [1.6, 3.0], [1.7, 3.0], [1.8, 3.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 3.0], [3.5, 3.0], [3.6, 3.0], [3.7, 3.0], [3.8, 3.0], [3.9, 3.0], [4.0, 3.0], [4.1, 3.0], [4.2, 3.0], [4.3, 3.0], [4.4, 3.0], [4.5, 3.0], [4.6, 3.0], [4.7, 3.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 4.0], [20.6, 4.0], [20.7, 4.0], [20.8, 4.0], [20.9, 4.0], [21.0, 4.0], [21.1, 4.0], [21.2, 4.0], [21.3, 4.0], [21.4, 4.0], [21.5, 4.0], [21.6, 4.0], [21.7, 4.0], [21.8, 4.0], [21.9, 4.0], [22.0, 4.0], [22.1, 4.0], [22.2, 4.0], [22.3, 4.0], [22.4, 4.0], [22.5, 4.0], [22.6, 4.0], [22.7, 4.0], [22.8, 4.0], [22.9, 4.0], [23.0, 4.0], [23.1, 4.0], [23.2, 4.0], [23.3, 4.0], [23.4, 4.0], [23.5, 4.0], [23.6, 4.0], [23.7, 4.0], [23.8, 4.0], [23.9, 4.0], [24.0, 4.0], [24.1, 4.0], [24.2, 4.0], [24.3, 4.0], [24.4, 4.0], [24.5, 4.0], [24.6, 4.0], [24.7, 4.0], [24.8, 4.0], [24.9, 4.0], [25.0, 4.0], [25.1, 4.0], [25.2, 4.0], [25.3, 4.0], [25.4, 4.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 4.0], [41.9, 4.0], [42.0, 4.0], [42.1, 4.0], [42.2, 4.0], [42.3, 4.0], [42.4, 4.0], [42.5, 4.0], [42.6, 4.0], [42.7, 4.0], [42.8, 4.0], [42.9, 4.0], [43.0, 4.0], [43.1, 4.0], [43.2, 4.0], [43.3, 4.0], [43.4, 4.0], [43.5, 4.0], [43.6, 4.0], [43.7, 4.0], [43.8, 4.0], [43.9, 4.0], [44.0, 4.0], [44.1, 4.0], [44.2, 4.0], [44.3, 4.0], [44.4, 4.0], [44.5, 4.0], [44.6, 4.0], [44.7, 4.0], [44.8, 4.0], [44.9, 4.0], [45.0, 4.0], [45.1, 4.0], [45.2, 4.0], [45.3, 4.0], [45.4, 4.0], [45.5, 4.0], [45.6, 4.0], [45.7, 4.0], [45.8, 4.0], [45.9, 4.0], [46.0, 4.0], [46.1, 4.0], [46.2, 4.0], [46.3, 4.0], [46.4, 4.0], [46.5, 4.0], [46.6, 4.0], [46.7, 4.0], [46.8, 4.0], [46.9, 4.0], [47.0, 4.0], [47.1, 4.0], [47.2, 4.0], [47.3, 4.0], [47.4, 4.0], [47.5, 4.0], [47.6, 4.0], [47.7, 4.0], [47.8, 4.0], [47.9, 4.0], [48.0, 4.0], [48.1, 4.0], [48.2, 4.0], [48.3, 4.0], [48.4, 4.0], [48.5, 4.0], [48.6, 4.0], [48.7, 4.0], [48.8, 4.0], [48.9, 4.0], [49.0, 4.0], [49.1, 4.0], [49.2, 4.0], [49.3, 4.0], [49.4, 4.0], [49.5, 4.0], [49.6, 4.0], [49.7, 4.0], [49.8, 4.0], [49.9, 4.0], [50.0, 4.0], [50.1, 4.0], [50.2, 4.0], [50.3, 4.0], [50.4, 4.0], [50.5, 4.0], [50.6, 4.0], [50.7, 4.0], [50.8, 4.0], [50.9, 4.0], [51.0, 4.0], [51.1, 4.0], [51.2, 4.0], [51.3, 4.0], [51.4, 4.0], [51.5, 4.0], [51.6, 4.0], [51.7, 4.0], [51.8, 4.0], [51.9, 4.0], [52.0, 4.0], [52.1, 4.0], [52.2, 4.0], [52.3, 4.0], [52.4, 4.0], [52.5, 4.0], [52.6, 4.0], [52.7, 4.0], [52.8, 4.0], [52.9, 4.0], [53.0, 4.0], [53.1, 4.0], [53.2, 4.0], [53.3, 4.0], [53.4, 4.0], [53.5, 4.0], [53.6, 4.0], [53.7, 4.0], [53.8, 4.0], [53.9, 4.0], [54.0, 4.0], [54.1, 4.0], [54.2, 4.0], [54.3, 4.0], [54.4, 4.0], [54.5, 4.0], [54.6, 4.0], [54.7, 4.0], [54.8, 4.0], [54.9, 4.0], [55.0, 4.0], [55.1, 4.0], [55.2, 5.0], [55.3, 5.0], [55.4, 5.0], [55.5, 5.0], [55.6, 5.0], [55.7, 5.0], [55.8, 5.0], [55.9, 5.0], [56.0, 5.0], [56.1, 5.0], [56.2, 5.0], [56.3, 5.0], [56.4, 5.0], [56.5, 5.0], [56.6, 5.0], [56.7, 5.0], [56.8, 5.0], [56.9, 5.0], [57.0, 5.0], [57.1, 5.0], [57.2, 5.0], [57.3, 5.0], [57.4, 5.0], [57.5, 5.0], [57.6, 5.0], [57.7, 5.0], [57.8, 5.0], [57.9, 5.0], [58.0, 5.0], [58.1, 5.0], [58.2, 5.0], [58.3, 5.0], [58.4, 5.0], [58.5, 5.0], [58.6, 5.0], [58.7, 5.0], [58.8, 5.0], [58.9, 5.0], [59.0, 5.0], [59.1, 5.0], [59.2, 5.0], [59.3, 5.0], [59.4, 5.0], [59.5, 5.0], [59.6, 5.0], [59.7, 5.0], [59.8, 5.0], [59.9, 5.0], [60.0, 5.0], [60.1, 5.0], [60.2, 5.0], [60.3, 5.0], [60.4, 5.0], [60.5, 5.0], [60.6, 5.0], [60.7, 5.0], [60.8, 5.0], [60.9, 5.0], [61.0, 5.0], [61.1, 5.0], [61.2, 5.0], [61.3, 5.0], [61.4, 5.0], [61.5, 5.0], [61.6, 5.0], [61.7, 5.0], [61.8, 5.0], [61.9, 5.0], [62.0, 5.0], [62.1, 5.0], [62.2, 5.0], [62.3, 5.0], [62.4, 5.0], [62.5, 5.0], [62.6, 5.0], [62.7, 5.0], [62.8, 5.0], [62.9, 5.0], [63.0, 5.0], [63.1, 5.0], [63.2, 5.0], [63.3, 5.0], [63.4, 5.0], [63.5, 5.0], [63.6, 5.0], [63.7, 5.0], [63.8, 5.0], [63.9, 5.0], [64.0, 5.0], [64.1, 5.0], [64.2, 5.0], [64.3, 5.0], [64.4, 5.0], [64.5, 5.0], [64.6, 5.0], [64.7, 5.0], [64.8, 5.0], [64.9, 5.0], [65.0, 5.0], [65.1, 5.0], [65.2, 5.0], [65.3, 5.0], [65.4, 5.0], [65.5, 5.0], [65.6, 5.0], [65.7, 5.0], [65.8, 5.0], [65.9, 5.0], [66.0, 5.0], [66.1, 5.0], [66.2, 6.0], [66.3, 6.0], [66.4, 6.0], [66.5, 6.0], [66.6, 6.0], [66.7, 6.0], [66.8, 6.0], [66.9, 6.0], [67.0, 6.0], [67.1, 6.0], [67.2, 6.0], [67.3, 6.0], [67.4, 6.0], [67.5, 6.0], [67.6, 6.0], [67.7, 6.0], [67.8, 6.0], [67.9, 6.0], [68.0, 6.0], [68.1, 6.0], [68.2, 6.0], [68.3, 6.0], [68.4, 6.0], [68.5, 6.0], [68.6, 6.0], [68.7, 6.0], [68.8, 6.0], [68.9, 6.0], [69.0, 6.0], [69.1, 6.0], [69.2, 6.0], [69.3, 6.0], [69.4, 6.0], [69.5, 6.0], [69.6, 6.0], [69.7, 6.0], [69.8, 6.0], [69.9, 6.0], [70.0, 6.0], [70.1, 6.0], [70.2, 6.0], [70.3, 6.0], [70.4, 6.0], [70.5, 6.0], [70.6, 6.0], [70.7, 6.0], [70.8, 6.0], [70.9, 6.0], [71.0, 6.0], [71.1, 6.0], [71.2, 6.0], [71.3, 6.0], [71.4, 6.0], [71.5, 6.0], [71.6, 6.0], [71.7, 6.0], [71.8, 6.0], [71.9, 6.0], [72.0, 6.0], [72.1, 6.0], [72.2, 6.0], [72.3, 6.0], [72.4, 6.0], [72.5, 6.0], [72.6, 6.0], [72.7, 6.0], [72.8, 6.0], [72.9, 6.0], [73.0, 6.0], [73.1, 6.0], [73.2, 6.0], [73.3, 6.0], [73.4, 7.0], [73.5, 7.0], [73.6, 7.0], [73.7, 7.0], [73.8, 7.0], [73.9, 7.0], [74.0, 7.0], [74.1, 7.0], [74.2, 7.0], [74.3, 7.0], [74.4, 7.0], [74.5, 7.0], [74.6, 7.0], [74.7, 7.0], [74.8, 7.0], [74.9, 7.0], [75.0, 7.0], [75.1, 7.0], [75.2, 7.0], [75.3, 7.0], [75.4, 7.0], [75.5, 7.0], [75.6, 7.0], [75.7, 7.0], [75.8, 7.0], [75.9, 7.0], [76.0, 7.0], [76.1, 7.0], [76.2, 7.0], [76.3, 7.0], [76.4, 7.0], [76.5, 7.0], [76.6, 7.0], [76.7, 7.0], [76.8, 7.0], [76.9, 7.0], [77.0, 7.0], [77.1, 7.0], [77.2, 7.0], [77.3, 7.0], [77.4, 8.0], [77.5, 8.0], [77.6, 8.0], [77.7, 8.0], [77.8, 8.0], [77.9, 8.0], [78.0, 8.0], [78.1, 8.0], [78.2, 8.0], [78.3, 8.0], [78.4, 8.0], [78.5, 8.0], [78.6, 8.0], [78.7, 8.0], [78.8, 8.0], [78.9, 8.0], [79.0, 8.0], [79.1, 8.0], [79.2, 8.0], [79.3, 8.0], [79.4, 8.0], [79.5, 8.0], [79.6, 8.0], [79.7, 8.0], [79.8, 8.0], [79.9, 8.0], [80.0, 8.0], [80.1, 8.0], [80.2, 8.0], [80.3, 8.0], [80.4, 8.0], [80.5, 8.0], [80.6, 8.0], [80.7, 8.0], [80.8, 8.0], [80.9, 8.0], [81.0, 8.0], [81.1, 8.0], [81.2, 8.0], [81.3, 8.0], [81.4, 8.0], [81.5, 8.0], [81.6, 8.0], [81.7, 9.0], [81.8, 9.0], [81.9, 9.0], [82.0, 9.0], [82.1, 9.0], [82.2, 9.0], [82.3, 9.0], [82.4, 9.0], [82.5, 9.0], [82.6, 9.0], [82.7, 9.0], [82.8, 9.0], [82.9, 9.0], [83.0, 9.0], [83.1, 9.0], [83.2, 9.0], [83.3, 9.0], [83.4, 9.0], [83.5, 9.0], [83.6, 9.0], [83.7, 9.0], [83.8, 9.0], [83.9, 9.0], [84.0, 9.0], [84.1, 9.0], [84.2, 10.0], [84.3, 10.0], [84.4, 10.0], [84.5, 10.0], [84.6, 10.0], [84.7, 10.0], [84.8, 10.0], [84.9, 10.0], [85.0, 10.0], [85.1, 10.0], [85.2, 10.0], [85.3, 10.0], [85.4, 10.0], [85.5, 10.0], [85.6, 10.0], [85.7, 11.0], [85.8, 11.0], [85.9, 11.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 11.0], [86.4, 11.0], [86.5, 11.0], [86.6, 11.0], [86.7, 11.0], [86.8, 11.0], [86.9, 11.0], [87.0, 11.0], [87.1, 11.0], [87.2, 11.0], [87.3, 11.0], [87.4, 11.0], [87.5, 11.0], [87.6, 11.0], [87.7, 11.0], [87.8, 11.0], [87.9, 12.0], [88.0, 12.0], [88.1, 12.0], [88.2, 12.0], [88.3, 12.0], [88.4, 12.0], [88.5, 12.0], [88.6, 12.0], [88.7, 12.0], [88.8, 12.0], [88.9, 12.0], [89.0, 12.0], [89.1, 12.0], [89.2, 12.0], [89.3, 12.0], [89.4, 12.0], [89.5, 12.0], [89.6, 12.0], [89.7, 13.0], [89.8, 13.0], [89.9, 13.0], [90.0, 13.0], [90.1, 13.0], [90.2, 13.0], [90.3, 13.0], [90.4, 13.0], [90.5, 13.0], [90.6, 13.0], [90.7, 13.0], [90.8, 13.0], [90.9, 13.0], [91.0, 13.0], [91.1, 13.0], [91.2, 13.0], [91.3, 13.0], [91.4, 14.0], [91.5, 14.0], [91.6, 14.0], [91.7, 14.0], [91.8, 14.0], [91.9, 14.0], [92.0, 14.0], [92.1, 14.0], [92.2, 14.0], [92.3, 14.0], [92.4, 14.0], [92.5, 14.0], [92.6, 14.0], [92.7, 14.0], [92.8, 14.0], [92.9, 14.0], [93.0, 15.0], [93.1, 15.0], [93.2, 15.0], [93.3, 15.0], [93.4, 15.0], [93.5, 15.0], [93.6, 15.0], [93.7, 15.0], [93.8, 15.0], [93.9, 15.0], [94.0, 16.0], [94.1, 16.0], [94.2, 16.0], [94.3, 16.0], [94.4, 16.0], [94.5, 16.0], [94.6, 16.0], [94.7, 16.0], [94.8, 16.0], [94.9, 16.0], [95.0, 16.0], [95.1, 16.0], [95.2, 17.0], [95.3, 17.0], [95.4, 17.0], [95.5, 17.0], [95.6, 17.0], [95.7, 17.0], [95.8, 19.0], [95.9, 19.0], [96.0, 20.0], [96.1, 20.0], [96.2, 20.0], [96.3, 20.0], [96.4, 21.0], [96.5, 21.0], [96.6, 21.0], [96.7, 21.0], [96.8, 21.0], [96.9, 21.0], [97.0, 21.0], [97.1, 21.0], [97.2, 21.0], [97.3, 21.0], [97.4, 22.0], [97.5, 22.0], [97.6, 22.0], [97.7, 22.0], [97.8, 22.0], [97.9, 22.0], [98.0, 23.0], [98.1, 23.0], [98.2, 23.0], [98.3, 23.0], [98.4, 24.0], [98.5, 24.0], [98.6, 24.0], [98.7, 24.0], [98.8, 24.0], [98.9, 24.0], [99.0, 28.0], [99.1, 28.0], [99.2, 29.0], [99.3, 29.0], [99.4, 31.0], [99.5, 31.0], [99.6, 31.0], [99.7, 35.0], [99.8, 35.0], [99.9, 36.0], [100.0, 36.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 500.0, "series": [{"data": [[18800.0, 2.0], [18700.0, 1.0], [18900.0, 5.0], [19000.0, 4.0], [19100.0, 2.0], [19200.0, 4.0], [19300.0, 1.0], [19400.0, 5.0], [20300.0, 5.0], [19600.0, 5.0], [19800.0, 8.0], [19700.0, 2.0], [19900.0, 10.0], [20100.0, 7.0], [20200.0, 6.0], [20000.0, 1.0], [20400.0, 7.0], [19500.0, 6.0], [21300.0, 22.0], [21200.0, 3.0], [20700.0, 7.0], [20600.0, 1.0], [20900.0, 7.0], [20500.0, 9.0], [20800.0, 3.0], [21100.0, 11.0], [21400.0, 14.0], [21500.0, 10.0], [21000.0, 2.0], [22400.0, 4.0], [22300.0, 4.0], [22200.0, 5.0], [22500.0, 12.0], [22100.0, 2.0], [21900.0, 18.0], [22000.0, 16.0], [21600.0, 15.0], [21700.0, 5.0], [21800.0, 8.0], [23300.0, 14.0], [23000.0, 6.0], [23500.0, 11.0], [23100.0, 11.0], [22800.0, 8.0], [22900.0, 8.0], [23400.0, 11.0], [22700.0, 13.0], [22600.0, 8.0], [23200.0, 9.0], [23800.0, 10.0], [23700.0, 3.0], [24200.0, 25.0], [24100.0, 6.0], [24000.0, 14.0], [23900.0, 7.0], [23600.0, 6.0], [24300.0, 11.0], [24400.0, 6.0], [24500.0, 13.0], [24600.0, 7.0], [24700.0, 15.0], [24800.0, 12.0], [24900.0, 7.0]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[0.0, 500.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[0.0, 417.0], [100.0, 81.0], [200.0, 2.0]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[0.0, 500.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 500.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1500.0, "series": [{"data": [[0.0, 1500.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 500.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 438.1385000000001, "minX": 1.69381908E12, "maxY": 438.1385000000001, "series": [{"data": [[1.69381908E12, 438.1385000000001]], "isOverall": false, "label": "Logiqids", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381908E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 22381.771999999943, "series": [{"data": [[500.0, 22381.771999999943]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[500.0, 22381.771999999943]], "isOverall": false, "label": "Logiqids_Landing_Page-Aggregated", "isController": false}, {"data": [[2.0, 14.0], [3.0, 24.0], [4.0, 21.0], [5.0, 18.0], [6.0, 12.0], [8.0, 15.5], [10.0, 14.5], [12.0, 13.0], [14.0, 11.0], [16.0, 7.0], [17.0, 13.0], [19.0, 5.5], [21.0, 6.0], [23.0, 10.0], [24.0, 7.0], [25.0, 6.0], [26.0, 8.0], [27.0, 5.0], [28.0, 7.0], [29.0, 4.0], [30.0, 3.0], [31.0, 6.0], [33.0, 5.0], [32.0, 6.0], [35.0, 2.0], [34.0, 2.0], [36.0, 4.0], [39.0, 5.0], [38.0, 16.0], [41.0, 11.666666666666666], [43.0, 11.5], [45.0, 8.5], [47.0, 9.0], [49.0, 9.5], [51.0, 8.5], [53.0, 8.0], [55.0, 6.0], [57.0, 6.0], [56.0, 8.0], [58.0, 7.0], [60.0, 5.0], [62.0, 8.5], [67.0, 7.0], [66.0, 6.5], [64.0, 8.0], [71.0, 6.5], [69.0, 6.0], [68.0, 7.0], [75.0, 5.0], [73.0, 6.0], [78.0, 11.0], [76.0, 13.0], [83.0, 3.5], [81.0, 4.0], [80.0, 6.0], [87.0, 4.0], [86.0, 3.0], [85.0, 5.0], [91.0, 10.0], [90.0, 14.0], [89.0, 15.0], [88.0, 5.0], [95.0, 6.0], [94.0, 13.0], [93.0, 4.0], [92.0, 6.0], [98.0, 3.0], [97.0, 11.0], [96.0, 13.0], [103.0, 6.0], [102.0, 5.0], [101.0, 7.0], [100.0, 7.5], [107.0, 4.0], [105.0, 3.0], [104.0, 4.0], [111.0, 19.0], [110.0, 3.0], [109.0, 4.0], [108.0, 3.0], [114.0, 5.0], [113.0, 4.0], [112.0, 13.0], [119.0, 3.5], [118.0, 19.0], [116.0, 2.5], [123.0, 8.0], [122.0, 10.0], [121.0, 4.0], [127.0, 3.0], [126.0, 6.0], [124.0, 3.0], [135.0, 6.0], [132.0, 5.0], [131.0, 4.0], [129.0, 4.0], [128.0, 3.0], [143.0, 4.0], [141.0, 4.0], [139.0, 5.0], [138.0, 4.0], [137.0, 4.0], [151.0, 5.0], [150.0, 5.0], [149.0, 5.0], [148.0, 4.0], [146.0, 2.5], [144.0, 3.0], [159.0, 3.0], [158.0, 5.0], [157.0, 4.0], [156.0, 4.0], [155.0, 4.5], [153.0, 4.0], [152.0, 8.0], [167.0, 4.0], [166.0, 6.0], [165.0, 4.0], [164.0, 5.0], [163.0, 3.0], [162.0, 3.0], [161.0, 3.0], [160.0, 4.0], [175.0, 3.0], [174.0, 3.0], [173.0, 3.0], [172.0, 3.0], [171.0, 4.0], [170.0, 4.0], [169.0, 3.5], [183.0, 3.0], [182.0, 4.0], [181.0, 5.0], [180.0, 3.0], [179.0, 3.0], [178.0, 6.0], [177.0, 6.5], [191.0, 3.0], [190.0, 4.0], [189.0, 3.0], [188.0, 4.0], [187.0, 4.0], [186.0, 3.0], [185.0, 4.0], [184.0, 4.0], [199.0, 3.0], [198.0, 3.0], [197.0, 4.0], [196.0, 4.0], [195.0, 6.0], [194.0, 3.0], [193.0, 4.0], [192.0, 3.0], [207.0, 3.0], [206.0, 3.0], [204.0, 3.5], [202.0, 3.0], [201.0, 4.0], [200.0, 3.0], [215.0, 3.0], [214.0, 3.0], [213.0, 5.0], [212.0, 3.5], [210.0, 3.0], [209.0, 4.0], [208.0, 4.0], [223.0, 4.0], [222.0, 4.0], [221.0, 5.0], [220.0, 5.0], [219.0, 3.0], [217.0, 4.0], [216.0, 5.0], [231.0, 3.0], [230.0, 3.0], [229.0, 4.0], [228.0, 3.0], [227.0, 3.0], [226.0, 3.0], [225.0, 3.0], [224.0, 4.0], [239.0, 6.0], [238.0, 3.0], [237.0, 4.0], [236.0, 4.0], [235.0, 3.0], [234.0, 3.5], [232.0, 7.0], [247.0, 7.0], [246.0, 42.0], [245.0, 16.0], [243.0, 3.0], [241.0, 7.0], [240.0, 6.0], [255.0, 4.0], [254.0, 4.0], [253.0, 11.5], [251.0, 29.0], [250.0, 4.0], [249.0, 8.0], [248.0, 8.0], [270.0, 4.0], [271.0, 5.0], [268.0, 6.0], [259.0, 5.0], [258.0, 5.0], [257.0, 14.0], [256.0, 8.0], [267.0, 5.0], [266.0, 11.0], [265.0, 11.0], [264.0, 8.0], [263.0, 5.0], [262.0, 5.0], [261.0, 6.0], [260.0, 3.0], [286.0, 5.5], [287.0, 4.0], [284.0, 6.0], [275.0, 7.0], [274.0, 3.0], [273.0, 9.0], [272.0, 9.0], [283.0, 4.0], [282.0, 3.0], [281.0, 6.0], [280.0, 4.0], [279.0, 5.0], [278.0, 4.0], [277.0, 4.0], [276.0, 6.0], [301.0, 4.0], [300.0, 4.0], [290.0, 3.0], [289.0, 4.0], [288.0, 4.0], [299.0, 4.0], [298.0, 4.0], [297.0, 5.0], [296.0, 5.0], [295.0, 4.0], [294.0, 8.0], [293.0, 7.0], [292.0, 14.0], [319.0, 23.0], [318.0, 19.0], [317.0, 33.0], [315.0, 27.666666666666668], [311.0, 28.0], [333.0, 8.0], [335.0, 8.5], [332.0, 7.0], [330.0, 40.5], [329.0, 13.0], [326.0, 8.0], [325.0, 60.0], [324.0, 30.0], [323.0, 43.0], [320.0, 23.0], [350.0, 17.0], [351.0, 17.0], [349.0, 4.0], [347.0, 5.0], [345.0, 5.0], [343.0, 7.0], [341.0, 20.0], [340.0, 30.0], [338.0, 7.5], [337.0, 7.0], [366.0, 4.0], [364.0, 27.0], [355.0, 7.0], [353.0, 45.5], [352.0, 29.0], [363.0, 15.0], [362.0, 8.0], [361.0, 5.0], [360.0, 17.0], [359.0, 4.5], [357.0, 5.0], [356.0, 48.0], [371.0, 16.0], [382.0, 9.0], [380.0, 8.5], [378.0, 9.5], [377.0, 11.0], [376.0, 11.0], [375.0, 12.5], [373.0, 7.0], [372.0, 14.0], [370.0, 20.0], [368.0, 24.0], [398.0, 6.0], [396.0, 6.0], [386.0, 11.0], [384.0, 13.0], [395.0, 4.0], [394.0, 8.0], [393.0, 9.0], [392.0, 6.0], [390.0, 10.5], [389.0, 12.0], [388.0, 9.0], [412.0, 4.0], [411.0, 4.5], [409.0, 5.0], [408.0, 3.0], [407.0, 4.0], [400.0, 8.666666666666666], [406.0, 8.0], [405.0, 9.0], [404.0, 6.0], [403.0, 4.0], [402.0, 8.5], [419.0, 7.0], [430.0, 3.5], [429.0, 4.5], [427.0, 5.5], [425.0, 4.5], [423.0, 3.0], [422.0, 5.5], [421.0, 7.0], [418.0, 4.5], [416.0, 4.5], [446.0, 11.0], [442.0, 4.0], [441.0, 34.0], [440.0, 3.0], [439.0, 4.0], [438.0, 4.5], [436.0, 5.5], [434.0, 4.0], [432.0, 3.0], [462.0, 6.5], [460.0, 6.0], [459.0, 7.5], [457.0, 11.5], [456.0, 10.0], [455.0, 19.0], [454.0, 14.0], [452.0, 22.0], [450.0, 19.0], [449.0, 6.0], [478.0, 6.0], [475.0, 8.0], [474.0, 8.5], [472.0, 11.0], [471.0, 13.0], [470.0, 20.0], [468.0, 7.0], [466.0, 6.0], [464.0, 8.5], [494.0, 6.0], [495.0, 5.0], [493.0, 5.5], [492.0, 5.0], [490.0, 5.0], [489.0, 6.0], [488.0, 5.0], [487.0, 4.0], [480.0, 8.0], [485.0, 8.0], [484.0, 7.0], [483.0, 6.0], [481.0, 7.0], [500.0, 4.2], [1.0, 30.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[252.5539999999999, 8.36600000000001]], "isOverall": false, "label": "Logiqids_Olympiad_Page-Aggregated", "isController": false}, {"data": [[500.0, 36.145999999999994]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[500.0, 36.145999999999994]], "isOverall": false, "label": "Logiqids_Login_Page-Aggregated", "isController": false}, {"data": [[500.0, 6.343999999999996]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}, {"data": [[500.0, 6.343999999999996]], "isOverall": false, "label": "Logiqids_Signup_Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5933.333333333333, "minX": 1.69381908E12, "maxY": 105816.66666666667, "series": [{"data": [[1.69381908E12, 105816.66666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69381908E12, 5933.333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381908E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 6.343999999999996, "minX": 1.69381908E12, "maxY": 22381.771999999943, "series": [{"data": [[1.69381908E12, 22381.771999999943]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1.69381908E12, 8.36600000000001]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[1.69381908E12, 36.145999999999994]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1.69381908E12, 6.343999999999996]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381908E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 6.247999999999998, "minX": 1.69381908E12, "maxY": 22311.224000000013, "series": [{"data": [[1.69381908E12, 22311.224000000013]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1.69381908E12, 8.325999999999995]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[1.69381908E12, 36.11200000000002]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1.69381908E12, 6.247999999999998]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381908E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69381908E12, "maxY": 22108.08800000003, "series": [{"data": [[1.69381908E12, 22108.08800000003]], "isOverall": false, "label": "Logiqids_Landing_Page", "isController": false}, {"data": [[1.69381908E12, 0.0]], "isOverall": false, "label": "Logiqids_Olympiad_Page", "isController": false}, {"data": [[1.69381908E12, 0.0]], "isOverall": false, "label": "Logiqids_Login_Page", "isController": false}, {"data": [[1.69381908E12, 0.0]], "isOverall": false, "label": "Logiqids_Signup_Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381908E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.69381908E12, "maxY": 24949.0, "series": [{"data": [[1.69381908E12, 24949.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69381908E12, 23079.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69381908E12, 24792.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69381908E12, 24104.9]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69381908E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69381908E12, 8.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381908E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 5.0, "minX": 12.0, "maxY": 17.0, "series": [{"data": [[12.0, 17.0], [488.0, 5.0], [500.0, 12.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 500.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 5.0, "minX": 12.0, "maxY": 17.0, "series": [{"data": [[12.0, 17.0], [488.0, 5.0], [500.0, 12.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 500.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.69381908E12, "maxY": 33.333333333333336, "series": [{"data": [[1.69381908E12, 33.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381908E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.69381908E12, "maxY": 33.333333333333336, "series": [{"data": [[1.69381908E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69381908E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.69381908E12, "maxY": 8.333333333333334, "series": [{"data": [[1.69381908E12, 8.333333333333334]], "isOverall": false, "label": "Logiqids_Signup_Page-success", "isController": false}, {"data": [[1.69381908E12, 8.333333333333334]], "isOverall": false, "label": "Logiqids_Landing_Page-success", "isController": false}, {"data": [[1.69381908E12, 8.333333333333334]], "isOverall": false, "label": "Logiqids_Login_Page-success", "isController": false}, {"data": [[1.69381908E12, 8.333333333333334]], "isOverall": false, "label": "Logiqids_Olympiad_Page-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381908E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.69381908E12, "maxY": 33.333333333333336, "series": [{"data": [[1.69381908E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69381908E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

